["^ ","~:output",["^ ","~:js","goog.provide('garden.units');\ngoog.require('cljs.core');\ngoog.require('cljs.reader');\ngoog.require('garden.types');\ngoog.require('garden.util');\ngarden.units.length_units = cljs.core.PersistentHashSet.createAsIfByAssoc([new cljs.core.Keyword(null,\"mm\",\"mm\",-1652850560),new cljs.core.Keyword(null,\"pt\",\"pt\",556460867),new cljs.core.Keyword(null,\"px\",\"px\",281329899),new cljs.core.Keyword(null,\"pc\",\"pc\",512913453),cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(\"%\"),new cljs.core.Keyword(null,\"cm\",\"cm\",540591536),new cljs.core.Keyword(null,\"in\",\"in\",-1531184865)]);\ngarden.units.angular_units = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"deg\",\"deg\",-681556081),null,new cljs.core.Keyword(null,\"turn\",\"turn\",75759344),null,new cljs.core.Keyword(null,\"rad\",\"rad\",-833983012),null,new cljs.core.Keyword(null,\"grad\",\"grad\",1125187229),null], null), null);\ngarden.units.time_units = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"s\",\"s\",1705939918),null,new cljs.core.Keyword(null,\"ms\",\"ms\",-1152709733),null], null), null);\ngarden.units.frequency_units = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"kHz\",\"kHz\",240398466),null,new cljs.core.Keyword(null,\"Hz\",\"Hz\",-1958732916),null], null), null);\ngarden.units.resolution_units = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"dppx\",\"dppx\",1920508843),null,new cljs.core.Keyword(null,\"dpcm\",\"dpcm\",-1187601236),null,new cljs.core.Keyword(null,\"dpi\",\"dpi\",-986162832),null], null), null);\n/**\n * True if x is of type CSSUnit.\n */\ngarden.units.unit_QMARK_ = (function garden$units$unit_QMARK_(x){\nreturn (x instanceof garden.types.CSSUnit);\n});\ngarden.units.length_QMARK_ = (function garden$units$length_QMARK_(x){\nreturn ((garden.units.unit_QMARK_(x)) && (cljs.core.contains_QMARK_(garden.units.length_units,new cljs.core.Keyword(null,\"unit\",\"unit\",375175175).cljs$core$IFn$_invoke$arity$1(x))));\n});\ngarden.units.angle_QMARK_ = (function garden$units$angle_QMARK_(x){\nreturn ((garden.units.unit_QMARK_(x)) && (cljs.core.contains_QMARK_(garden.units.angular_units,new cljs.core.Keyword(null,\"unit\",\"unit\",375175175).cljs$core$IFn$_invoke$arity$1(x))));\n});\ngarden.units.time_QMARK_ = (function garden$units$time_QMARK_(x){\nreturn ((garden.units.unit_QMARK_(x)) && (cljs.core.contains_QMARK_(garden.units.time_units,new cljs.core.Keyword(null,\"unit\",\"unit\",375175175).cljs$core$IFn$_invoke$arity$1(x))));\n});\ngarden.units.frequency_QMARK_ = (function garden$units$frequency_QMARK_(x){\nreturn ((garden.units.unit_QMARK_(x)) && (cljs.core.contains_QMARK_(garden.units.frequency_units,new cljs.core.Keyword(null,\"unit\",\"unit\",375175175).cljs$core$IFn$_invoke$arity$1(x))));\n});\ngarden.units.resolution_QMARK_ = (function garden$units$resolution_QMARK_(x){\nreturn ((garden.units.unit_QMARK_(x)) && (cljs.core.contains_QMARK_(garden.units.resolution_units,new cljs.core.Keyword(null,\"unit\",\"unit\",375175175).cljs$core$IFn$_invoke$arity$1(x))));\n});\n/**\n * Map associating CSS unit types to their conversion values.\n */\ngarden.units.conversions = cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"mm\",\"mm\",-1652850560),new cljs.core.Keyword(null,\"kHz\",\"kHz\",240398466),new cljs.core.Keyword(null,\"pt\",\"pt\",556460867),new cljs.core.Keyword(null,\"px\",\"px\",281329899),new cljs.core.Keyword(null,\"rem\",\"rem\",-976484757),new cljs.core.Keyword(null,\"em\",\"em\",707813035),new cljs.core.Keyword(null,\"Hz\",\"Hz\",-1958732916),new cljs.core.Keyword(null,\"pc\",\"pc\",512913453),cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(\"%\"),new cljs.core.Keyword(null,\"s\",\"s\",1705939918),new cljs.core.Keyword(null,\"deg\",\"deg\",-681556081),new cljs.core.Keyword(null,\"cm\",\"cm\",540591536),new cljs.core.Keyword(null,\"turn\",\"turn\",75759344),new cljs.core.Keyword(null,\"ms\",\"ms\",-1152709733),new cljs.core.Keyword(null,\"rad\",\"rad\",-833983012),new cljs.core.Keyword(null,\"grad\",\"grad\",1125187229),new cljs.core.Keyword(null,\"in\",\"in\",-1531184865)],[new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"mm\",\"mm\",-1652850560),(1),new cljs.core.Keyword(null,\"pt\",\"pt\",556460867),2.83464567,new cljs.core.Keyword(null,\"px\",\"px\",281329899),3.7795275591], null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"kHz\",\"kHz\",240398466),(1)], null),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"pt\",\"pt\",556460867),(1),new cljs.core.Keyword(null,\"px\",\"px\",281329899),1.3333333333], null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"px\",\"px\",281329899),(1)], null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"rem\",\"rem\",-976484757),(1)], null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"em\",\"em\",707813035),(1)], null),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"Hz\",\"Hz\",-1958732916),(1),new cljs.core.Keyword(null,\"kHz\",\"kHz\",240398466),0.001], null),new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"mm\",\"mm\",-1652850560),4.23333333,new cljs.core.Keyword(null,\"pc\",\"pc\",512913453),(1),new cljs.core.Keyword(null,\"pt\",\"pt\",556460867),(12),new cljs.core.Keyword(null,\"px\",\"px\",281329899),(16)], null),cljs.core.PersistentArrayMap.createAsIfByAssoc([cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(\"%\"),(1)]),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"ms\",\"ms\",-1152709733),(1000),new cljs.core.Keyword(null,\"s\",\"s\",1705939918),(1)], null),new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"deg\",\"deg\",-681556081),(1),new cljs.core.Keyword(null,\"grad\",\"grad\",1125187229),1.111111111,new cljs.core.Keyword(null,\"rad\",\"rad\",-833983012),0.0174532925,new cljs.core.Keyword(null,\"turn\",\"turn\",75759344),0.002777778], null),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"cm\",\"cm\",540591536),(1),new cljs.core.Keyword(null,\"mm\",\"mm\",-1652850560),(10),new cljs.core.Keyword(null,\"pc\",\"pc\",512913453),2.36220473,new cljs.core.Keyword(null,\"pt\",\"pt\",556460867),28.3464567,new cljs.core.Keyword(null,\"px\",\"px\",281329899),37.795275591], null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"turn\",\"turn\",75759344),(1)], null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"ms\",\"ms\",-1152709733),(1)], null),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"rad\",\"rad\",-833983012),(1),new cljs.core.Keyword(null,\"turn\",\"turn\",75759344),0.159154943], null),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"grad\",\"grad\",1125187229),(1),new cljs.core.Keyword(null,\"rad\",\"rad\",-833983012),63.661977237,new cljs.core.Keyword(null,\"turn\",\"turn\",75759344),0.0025], null),new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\"cm\",\"cm\",540591536),2.54,new cljs.core.Keyword(null,\"in\",\"in\",-1531184865),(1),new cljs.core.Keyword(null,\"mm\",\"mm\",-1652850560),25.4,new cljs.core.Keyword(null,\"pc\",\"pc\",512913453),(6),new cljs.core.Keyword(null,\"pt\",\"pt\",556460867),(72),new cljs.core.Keyword(null,\"px\",\"px\",281329899),(96)], null)]);\n/**\n * True if unit is a key of convertable-units, false otherwise.\n */\ngarden.units.convertable_QMARK_ = (function garden$units$convertable_QMARK_(unit){\nreturn cljs.core.contains_QMARK_(garden.units.conversions,unit);\n});\n/**\n * Convert a Unit with :unit left to a Unit with :unit right if possible.\n */\ngarden.units.convert = (function garden$units$convert(p__40746,right){\nvar map__40747 = p__40746;\nvar map__40747__$1 = (((((!((map__40747 == null))))?(((((map__40747.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__40747.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__40747):map__40747);\nvar m = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__40747__$1,new cljs.core.Keyword(null,\"magnitude\",\"magnitude\",1924274222));\nvar left = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__40747__$1,new cljs.core.Keyword(null,\"unit\",\"unit\",375175175));\nif(cljs.core.every_QMARK_(garden.units.convertable_QMARK_,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [left,right], null))){\nvar v1 = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(garden.units.conversions,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [left,right], null));\nvar v2 = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(garden.units.conversions,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [right,left], null));\nif(cljs.core.truth_(v1)){\nreturn (new garden.types.CSSUnit(right,(v1 * m),null,null,null));\n} else {\nif(cljs.core.truth_(v2)){\nreturn (new garden.types.CSSUnit(right,(m / v2),null,null,null));\n} else {\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(garden.util.format.cljs$core$IFn$_invoke$arity$variadic(\"Can't convert %s to %s\",cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.name(left),cljs.core.name(right)], 0)),cljs.core.PersistentArrayMap.EMPTY);\n\n}\n}\n} else {\nvar x = cljs.core.first(cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(garden.units.convertable_QMARK_,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [left,right], null)));\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2([\"Inconvertible unit \",cljs.core.name(x)].join(''),cljs.core.PersistentArrayMap.EMPTY);\n}\n});\n/**\n * Regular expression for matching a CSS unit. The magnitude\n *           and unit are captured.\n */\ngarden.units.unit_re = /([+-]?\\d+(?:\\.?\\d+)?)(p[xtc]|in|[cm]m|%|r?em|ex|ch|v(?:[wh]|m(?:in|ax))|deg|g?rad|turn|m?s|k?Hz|dp(?:i|cm|px))/;\n/**\n * Read a `CSSUnit` object from the string `s`.\n */\ngarden.units.read_unit = (function garden$units$read_unit(s){\nvar temp__5735__auto__ = cljs.core.re_matches(garden.units.unit_re,s);\nif(cljs.core.truth_(temp__5735__auto__)){\nvar vec__40749 = temp__5735__auto__;\nvar _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__40749,(0),null);\nvar magnitude = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__40749,(1),null);\nvar unit = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__40749,(2),null);\nvar unit__$1 = cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(unit);\nvar magnitude__$1 = (cljs.core.truth_(magnitude)?cljs.reader.read_string.cljs$core$IFn$_invoke$arity$1(magnitude):(0));\nreturn (new garden.types.CSSUnit(unit__$1,magnitude__$1,null,null,null));\n} else {\nreturn null;\n}\n});\n/**\n * Creates a function for verifying the given unit type.\n */\ngarden.units.make_unit_predicate = (function garden$units$make_unit_predicate(unit){\nreturn (function (x){\nreturn ((garden.units.unit_QMARK_(x)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"unit\",\"unit\",375175175).cljs$core$IFn$_invoke$arity$1(x),unit)));\n});\n});\n/**\n * Creates a function for creating and converting `CSSUnit`s for the\n *   given unit. If a number n is passed the function it will produce a\n *   new `CSSUnit` record with a the magnitude set to n. If a `CSSUnit`\n *   is passed the function will attempt to convert it.\n */\ngarden.units.make_unit_fn = (function garden$units$make_unit_fn(unit){\nreturn (function (x){\nif(typeof x === 'number'){\nreturn (new garden.types.CSSUnit(unit,x,null,null,null));\n} else {\nif(garden.units.unit_QMARK_(x)){\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((unit.cljs$core$IFn$_invoke$arity$1 ? unit.cljs$core$IFn$_invoke$arity$1(x) : unit.call(null,x)),unit)){\nreturn x;\n} else {\nreturn garden.units.convert(x,unit);\n}\n} else {\nvar ex_message = garden.util.format.cljs$core$IFn$_invoke$arity$variadic(\"Unable to convert from %s to %s\",cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.type.getName(),cljs.core.name(unit)], 0));\nvar ex_data = new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"given\",\"given\",716253602),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"type\",\"type\",1174270348),cljs.core.type,new cljs.core.Keyword(null,\"unit\",\"unit\",375175175),unit], null)], null);\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(ex_message,ex_data);\n\n}\n}\n});\n});\n/**\n * Create a addition function for adding Units.\n */\ngarden.units.make_unit_adder = (function garden$units$make_unit_adder(unit){\nvar u = garden.units.make_unit_fn(unit);\nreturn ((function (u){\nreturn (function() {\nvar garden$units$make_unit_adder_$_u_PLUS_ = null;\nvar garden$units$make_unit_adder_$_u_PLUS___0 = (function (){\nreturn (u.cljs$core$IFn$_invoke$arity$1 ? u.cljs$core$IFn$_invoke$arity$1((0)) : u.call(null,(0)));\n});\nvar garden$units$make_unit_adder_$_u_PLUS___1 = (function (x){\nreturn (u.cljs$core$IFn$_invoke$arity$1 ? u.cljs$core$IFn$_invoke$arity$1(x) : u.call(null,x));\n});\nvar garden$units$make_unit_adder_$_u_PLUS___2 = (function (x,y){\nvar map__40752 = (u.cljs$core$IFn$_invoke$arity$1 ? u.cljs$core$IFn$_invoke$arity$1(x) : u.call(null,x));\nvar map__40752__$1 = (((((!((map__40752 == null))))?(((((map__40752.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__40752.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__40752):map__40752);\nvar m1 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__40752__$1,new cljs.core.Keyword(null,\"magnitude\",\"magnitude\",1924274222));\nvar map__40753 = (u.cljs$core$IFn$_invoke$arity$1 ? u.cljs$core$IFn$_invoke$arity$1(y) : u.call(null,y));\nvar map__40753__$1 = (((((!((map__40753 == null))))?(((((map__40753.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__40753.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__40753):map__40753);\nvar m2 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__40753__$1,new cljs.core.Keyword(null,\"magnitude\",\"magnitude\",1924274222));\nvar G__40756 = (m1 + m2);\nreturn (u.cljs$core$IFn$_invoke$arity$1 ? u.cljs$core$IFn$_invoke$arity$1(G__40756) : u.call(null,G__40756));\n});\nvar garden$units$make_unit_adder_$_u_PLUS___3 = (function() { \nvar G__40871__delegate = function (x,y,more){\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(garden$units$make_unit_adder_$_u_PLUS_,garden$units$make_unit_adder_$_u_PLUS_.cljs$core$IFn$_invoke$arity$2(x,y),more);\n};\nvar G__40871 = function (x,y,var_args){\nvar more = null;\nif (arguments.length > 2) {\nvar G__40873__i = 0, G__40873__a = new Array(arguments.length -  2);\nwhile (G__40873__i < G__40873__a.length) {G__40873__a[G__40873__i] = arguments[G__40873__i + 2]; ++G__40873__i;}\n  more = new cljs.core.IndexedSeq(G__40873__a,0,null);\n} \nreturn G__40871__delegate.call(this,x,y,more);};\nG__40871.cljs$lang$maxFixedArity = 2;\nG__40871.cljs$lang$applyTo = (function (arglist__40874){\nvar x = cljs.core.first(arglist__40874);\narglist__40874 = cljs.core.next(arglist__40874);\nvar y = cljs.core.first(arglist__40874);\nvar more = cljs.core.rest(arglist__40874);\nreturn G__40871__delegate(x,y,more);\n});\nG__40871.cljs$core$IFn$_invoke$arity$variadic = G__40871__delegate;\nreturn G__40871;\n})()\n;\ngarden$units$make_unit_adder_$_u_PLUS_ = function(x,y,var_args){\nvar more = var_args;\nswitch(arguments.length){\ncase 0:\nreturn garden$units$make_unit_adder_$_u_PLUS___0.call(this);\ncase 1:\nreturn garden$units$make_unit_adder_$_u_PLUS___1.call(this,x);\ncase 2:\nreturn garden$units$make_unit_adder_$_u_PLUS___2.call(this,x,y);\ndefault:\nvar G__40876 = null;\nif (arguments.length > 2) {\nvar G__40877__i = 0, G__40877__a = new Array(arguments.length -  2);\nwhile (G__40877__i < G__40877__a.length) {G__40877__a[G__40877__i] = arguments[G__40877__i + 2]; ++G__40877__i;}\nG__40876 = new cljs.core.IndexedSeq(G__40877__a,0,null);\n}\nreturn garden$units$make_unit_adder_$_u_PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__40876);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\ngarden$units$make_unit_adder_$_u_PLUS_.cljs$lang$maxFixedArity = 2;\ngarden$units$make_unit_adder_$_u_PLUS_.cljs$lang$applyTo = garden$units$make_unit_adder_$_u_PLUS___3.cljs$lang$applyTo;\ngarden$units$make_unit_adder_$_u_PLUS_.cljs$core$IFn$_invoke$arity$0 = garden$units$make_unit_adder_$_u_PLUS___0;\ngarden$units$make_unit_adder_$_u_PLUS_.cljs$core$IFn$_invoke$arity$1 = garden$units$make_unit_adder_$_u_PLUS___1;\ngarden$units$make_unit_adder_$_u_PLUS_.cljs$core$IFn$_invoke$arity$2 = garden$units$make_unit_adder_$_u_PLUS___2;\ngarden$units$make_unit_adder_$_u_PLUS_.cljs$core$IFn$_invoke$arity$variadic = garden$units$make_unit_adder_$_u_PLUS___3.cljs$core$IFn$_invoke$arity$variadic;\nreturn garden$units$make_unit_adder_$_u_PLUS_;\n})()\n;})(u))\n});\n/**\n * Create a subtraction function for subtracting Units.\n */\ngarden.units.make_unit_subtractor = (function garden$units$make_unit_subtractor(unit){\nvar u = garden.units.make_unit_fn(unit);\nreturn ((function (u){\nreturn (function() {\nvar garden$units$make_unit_subtractor_$_u_ = null;\nvar garden$units$make_unit_subtractor_$_u___1 = (function (x){\nvar G__40757 = (- x);\nreturn (u.cljs$core$IFn$_invoke$arity$1 ? u.cljs$core$IFn$_invoke$arity$1(G__40757) : u.call(null,G__40757));\n});\nvar garden$units$make_unit_subtractor_$_u___2 = (function (x,y){\nvar map__40758 = (u.cljs$core$IFn$_invoke$arity$1 ? u.cljs$core$IFn$_invoke$arity$1(x) : u.call(null,x));\nvar map__40758__$1 = (((((!((map__40758 == null))))?(((((map__40758.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__40758.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__40758):map__40758);\nvar m1 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__40758__$1,new cljs.core.Keyword(null,\"magnitude\",\"magnitude\",1924274222));\nvar map__40759 = (u.cljs$core$IFn$_invoke$arity$1 ? u.cljs$core$IFn$_invoke$arity$1(y) : u.call(null,y));\nvar map__40759__$1 = (((((!((map__40759 == null))))?(((((map__40759.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__40759.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__40759):map__40759);\nvar m2 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__40759__$1,new cljs.core.Keyword(null,\"magnitude\",\"magnitude\",1924274222));\nvar G__40762 = (m1 - m2);\nreturn (u.cljs$core$IFn$_invoke$arity$1 ? u.cljs$core$IFn$_invoke$arity$1(G__40762) : u.call(null,G__40762));\n});\nvar garden$units$make_unit_subtractor_$_u___3 = (function() { \nvar G__40883__delegate = function (x,y,more){\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(garden$units$make_unit_subtractor_$_u_,garden$units$make_unit_subtractor_$_u_.cljs$core$IFn$_invoke$arity$2(x,y),more);\n};\nvar G__40883 = function (x,y,var_args){\nvar more = null;\nif (arguments.length > 2) {\nvar G__40884__i = 0, G__40884__a = new Array(arguments.length -  2);\nwhile (G__40884__i < G__40884__a.length) {G__40884__a[G__40884__i] = arguments[G__40884__i + 2]; ++G__40884__i;}\n  more = new cljs.core.IndexedSeq(G__40884__a,0,null);\n} \nreturn G__40883__delegate.call(this,x,y,more);};\nG__40883.cljs$lang$maxFixedArity = 2;\nG__40883.cljs$lang$applyTo = (function (arglist__40885){\nvar x = cljs.core.first(arglist__40885);\narglist__40885 = cljs.core.next(arglist__40885);\nvar y = cljs.core.first(arglist__40885);\nvar more = cljs.core.rest(arglist__40885);\nreturn G__40883__delegate(x,y,more);\n});\nG__40883.cljs$core$IFn$_invoke$arity$variadic = G__40883__delegate;\nreturn G__40883;\n})()\n;\ngarden$units$make_unit_subtractor_$_u_ = function(x,y,var_args){\nvar more = var_args;\nswitch(arguments.length){\ncase 1:\nreturn garden$units$make_unit_subtractor_$_u___1.call(this,x);\ncase 2:\nreturn garden$units$make_unit_subtractor_$_u___2.call(this,x,y);\ndefault:\nvar G__40886 = null;\nif (arguments.length > 2) {\nvar G__40887__i = 0, G__40887__a = new Array(arguments.length -  2);\nwhile (G__40887__i < G__40887__a.length) {G__40887__a[G__40887__i] = arguments[G__40887__i + 2]; ++G__40887__i;}\nG__40886 = new cljs.core.IndexedSeq(G__40887__a,0,null);\n}\nreturn garden$units$make_unit_subtractor_$_u___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__40886);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\ngarden$units$make_unit_subtractor_$_u_.cljs$lang$maxFixedArity = 2;\ngarden$units$make_unit_subtractor_$_u_.cljs$lang$applyTo = garden$units$make_unit_subtractor_$_u___3.cljs$lang$applyTo;\ngarden$units$make_unit_subtractor_$_u_.cljs$core$IFn$_invoke$arity$1 = garden$units$make_unit_subtractor_$_u___1;\ngarden$units$make_unit_subtractor_$_u_.cljs$core$IFn$_invoke$arity$2 = garden$units$make_unit_subtractor_$_u___2;\ngarden$units$make_unit_subtractor_$_u_.cljs$core$IFn$_invoke$arity$variadic = garden$units$make_unit_subtractor_$_u___3.cljs$core$IFn$_invoke$arity$variadic;\nreturn garden$units$make_unit_subtractor_$_u_;\n})()\n;})(u))\n});\n/**\n * Create a multiplication function for multiplying Units.\n */\ngarden.units.make_unit_multiplier = (function garden$units$make_unit_multiplier(unit){\nvar u = garden.units.make_unit_fn(unit);\nvar op = ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(unit,new cljs.core.Keyword(null,\"%\",\"%\",1704198600)))?((function (u){\nreturn (function garden$units$make_unit_multiplier_$_percent_STAR_(x,y){\nreturn ((x * y) / (100));\n});})(u))\n:cljs.core._STAR_);\nreturn ((function (u,op){\nreturn (function() {\nvar garden$units$make_unit_multiplier_$_u_STAR_ = null;\nvar garden$units$make_unit_multiplier_$_u_STAR___0 = (function (){\nreturn (u.cljs$core$IFn$_invoke$arity$1 ? u.cljs$core$IFn$_invoke$arity$1((1)) : u.call(null,(1)));\n});\nvar garden$units$make_unit_multiplier_$_u_STAR___1 = (function (x){\nreturn (u.cljs$core$IFn$_invoke$arity$1 ? u.cljs$core$IFn$_invoke$arity$1(x) : u.call(null,x));\n});\nvar garden$units$make_unit_multiplier_$_u_STAR___2 = (function (x,y){\nvar map__40768 = (u.cljs$core$IFn$_invoke$arity$1 ? u.cljs$core$IFn$_invoke$arity$1(x) : u.call(null,x));\nvar map__40768__$1 = (((((!((map__40768 == null))))?(((((map__40768.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__40768.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__40768):map__40768);\nvar m1 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__40768__$1,new cljs.core.Keyword(null,\"magnitude\",\"magnitude\",1924274222));\nvar map__40769 = (u.cljs$core$IFn$_invoke$arity$1 ? u.cljs$core$IFn$_invoke$arity$1(y) : u.call(null,y));\nvar map__40769__$1 = (((((!((map__40769 == null))))?(((((map__40769.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__40769.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__40769):map__40769);\nvar m2 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__40769__$1,new cljs.core.Keyword(null,\"magnitude\",\"magnitude\",1924274222));\nvar G__40780 = (op.cljs$core$IFn$_invoke$arity$2 ? op.cljs$core$IFn$_invoke$arity$2(m1,m2) : op.call(null,m1,m2));\nreturn (u.cljs$core$IFn$_invoke$arity$1 ? u.cljs$core$IFn$_invoke$arity$1(G__40780) : u.call(null,G__40780));\n});\nvar garden$units$make_unit_multiplier_$_u_STAR___3 = (function() { \nvar G__40888__delegate = function (x,y,more){\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(garden$units$make_unit_multiplier_$_u_STAR_,garden$units$make_unit_multiplier_$_u_STAR_.cljs$core$IFn$_invoke$arity$2(x,y),more);\n};\nvar G__40888 = function (x,y,var_args){\nvar more = null;\nif (arguments.length > 2) {\nvar G__40889__i = 0, G__40889__a = new Array(arguments.length -  2);\nwhile (G__40889__i < G__40889__a.length) {G__40889__a[G__40889__i] = arguments[G__40889__i + 2]; ++G__40889__i;}\n  more = new cljs.core.IndexedSeq(G__40889__a,0,null);\n} \nreturn G__40888__delegate.call(this,x,y,more);};\nG__40888.cljs$lang$maxFixedArity = 2;\nG__40888.cljs$lang$applyTo = (function (arglist__40890){\nvar x = cljs.core.first(arglist__40890);\narglist__40890 = cljs.core.next(arglist__40890);\nvar y = cljs.core.first(arglist__40890);\nvar more = cljs.core.rest(arglist__40890);\nreturn G__40888__delegate(x,y,more);\n});\nG__40888.cljs$core$IFn$_invoke$arity$variadic = G__40888__delegate;\nreturn G__40888;\n})()\n;\ngarden$units$make_unit_multiplier_$_u_STAR_ = function(x,y,var_args){\nvar more = var_args;\nswitch(arguments.length){\ncase 0:\nreturn garden$units$make_unit_multiplier_$_u_STAR___0.call(this);\ncase 1:\nreturn garden$units$make_unit_multiplier_$_u_STAR___1.call(this,x);\ncase 2:\nreturn garden$units$make_unit_multiplier_$_u_STAR___2.call(this,x,y);\ndefault:\nvar G__40891 = null;\nif (arguments.length > 2) {\nvar G__40892__i = 0, G__40892__a = new Array(arguments.length -  2);\nwhile (G__40892__i < G__40892__a.length) {G__40892__a[G__40892__i] = arguments[G__40892__i + 2]; ++G__40892__i;}\nG__40891 = new cljs.core.IndexedSeq(G__40892__a,0,null);\n}\nreturn garden$units$make_unit_multiplier_$_u_STAR___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__40891);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\ngarden$units$make_unit_multiplier_$_u_STAR_.cljs$lang$maxFixedArity = 2;\ngarden$units$make_unit_multiplier_$_u_STAR_.cljs$lang$applyTo = garden$units$make_unit_multiplier_$_u_STAR___3.cljs$lang$applyTo;\ngarden$units$make_unit_multiplier_$_u_STAR_.cljs$core$IFn$_invoke$arity$0 = garden$units$make_unit_multiplier_$_u_STAR___0;\ngarden$units$make_unit_multiplier_$_u_STAR_.cljs$core$IFn$_invoke$arity$1 = garden$units$make_unit_multiplier_$_u_STAR___1;\ngarden$units$make_unit_multiplier_$_u_STAR_.cljs$core$IFn$_invoke$arity$2 = garden$units$make_unit_multiplier_$_u_STAR___2;\ngarden$units$make_unit_multiplier_$_u_STAR_.cljs$core$IFn$_invoke$arity$variadic = garden$units$make_unit_multiplier_$_u_STAR___3.cljs$core$IFn$_invoke$arity$variadic;\nreturn garden$units$make_unit_multiplier_$_u_STAR_;\n})()\n;})(u,op))\n});\n/**\n * Create a division function for dividing Units.\n */\ngarden.units.make_unit_divider = (function garden$units$make_unit_divider(unit){\nvar u = garden.units.make_unit_fn(unit);\nvar op = ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(unit,new cljs.core.Keyword(null,\"%\",\"%\",1704198600)))?((function (u){\nreturn (function garden$units$make_unit_divider_$_percent_div(x,y){\nreturn ((100) * (x / y));\n});})(u))\n:cljs.core._SLASH_);\nreturn ((function (u,op){\nreturn (function() {\nvar garden$units$make_unit_divider_$_ud = null;\nvar garden$units$make_unit_divider_$_ud__1 = (function (x){\nvar G__40784 = ((1) / x);\nreturn (u.cljs$core$IFn$_invoke$arity$1 ? u.cljs$core$IFn$_invoke$arity$1(G__40784) : u.call(null,G__40784));\n});\nvar garden$units$make_unit_divider_$_ud__2 = (function (x,y){\nvar map__40785 = (u.cljs$core$IFn$_invoke$arity$1 ? u.cljs$core$IFn$_invoke$arity$1(x) : u.call(null,x));\nvar map__40785__$1 = (((((!((map__40785 == null))))?(((((map__40785.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__40785.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__40785):map__40785);\nvar m1 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__40785__$1,new cljs.core.Keyword(null,\"magnitude\",\"magnitude\",1924274222));\nvar map__40786 = (u.cljs$core$IFn$_invoke$arity$1 ? u.cljs$core$IFn$_invoke$arity$1(y) : u.call(null,y));\nvar map__40786__$1 = (((((!((map__40786 == null))))?(((((map__40786.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__40786.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__40786):map__40786);\nvar m2 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__40786__$1,new cljs.core.Keyword(null,\"magnitude\",\"magnitude\",1924274222));\nvar G__40794 = (op.cljs$core$IFn$_invoke$arity$2 ? op.cljs$core$IFn$_invoke$arity$2(m1,m2) : op.call(null,m1,m2));\nreturn (u.cljs$core$IFn$_invoke$arity$1 ? u.cljs$core$IFn$_invoke$arity$1(G__40794) : u.call(null,G__40794));\n});\nvar garden$units$make_unit_divider_$_ud__3 = (function() { \nvar G__40898__delegate = function (x,y,more){\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(garden$units$make_unit_divider_$_ud,garden$units$make_unit_divider_$_ud.cljs$core$IFn$_invoke$arity$2(x,y),more);\n};\nvar G__40898 = function (x,y,var_args){\nvar more = null;\nif (arguments.length > 2) {\nvar G__40901__i = 0, G__40901__a = new Array(arguments.length -  2);\nwhile (G__40901__i < G__40901__a.length) {G__40901__a[G__40901__i] = arguments[G__40901__i + 2]; ++G__40901__i;}\n  more = new cljs.core.IndexedSeq(G__40901__a,0,null);\n} \nreturn G__40898__delegate.call(this,x,y,more);};\nG__40898.cljs$lang$maxFixedArity = 2;\nG__40898.cljs$lang$applyTo = (function (arglist__40902){\nvar x = cljs.core.first(arglist__40902);\narglist__40902 = cljs.core.next(arglist__40902);\nvar y = cljs.core.first(arglist__40902);\nvar more = cljs.core.rest(arglist__40902);\nreturn G__40898__delegate(x,y,more);\n});\nG__40898.cljs$core$IFn$_invoke$arity$variadic = G__40898__delegate;\nreturn G__40898;\n})()\n;\ngarden$units$make_unit_divider_$_ud = function(x,y,var_args){\nvar more = var_args;\nswitch(arguments.length){\ncase 1:\nreturn garden$units$make_unit_divider_$_ud__1.call(this,x);\ncase 2:\nreturn garden$units$make_unit_divider_$_ud__2.call(this,x,y);\ndefault:\nvar G__40903 = null;\nif (arguments.length > 2) {\nvar G__40904__i = 0, G__40904__a = new Array(arguments.length -  2);\nwhile (G__40904__i < G__40904__a.length) {G__40904__a[G__40904__i] = arguments[G__40904__i + 2]; ++G__40904__i;}\nG__40903 = new cljs.core.IndexedSeq(G__40904__a,0,null);\n}\nreturn garden$units$make_unit_divider_$_ud__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__40903);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\ngarden$units$make_unit_divider_$_ud.cljs$lang$maxFixedArity = 2;\ngarden$units$make_unit_divider_$_ud.cljs$lang$applyTo = garden$units$make_unit_divider_$_ud__3.cljs$lang$applyTo;\ngarden$units$make_unit_divider_$_ud.cljs$core$IFn$_invoke$arity$1 = garden$units$make_unit_divider_$_ud__1;\ngarden$units$make_unit_divider_$_ud.cljs$core$IFn$_invoke$arity$2 = garden$units$make_unit_divider_$_ud__2;\ngarden$units$make_unit_divider_$_ud.cljs$core$IFn$_invoke$arity$variadic = garden$units$make_unit_divider_$_ud__3.cljs$core$IFn$_invoke$arity$variadic;\nreturn garden$units$make_unit_divider_$_ud;\n})()\n;})(u,op))\n});\ngarden.units.cm = garden.units.make_unit_fn(new cljs.core.Keyword(null,\"cm\",\"cm\",540591536));\n\ngarden.units.cm_QMARK_ = garden.units.make_unit_predicate(new cljs.core.Keyword(null,\"cm\",\"cm\",540591536));\n\ngarden.units.cm_PLUS_ = garden.units.make_unit_adder(new cljs.core.Keyword(null,\"cm\",\"cm\",540591536));\n\ngarden.units.cm_ = garden.units.make_unit_subtractor(new cljs.core.Keyword(null,\"cm\",\"cm\",540591536));\n\ngarden.units.cm_STAR_ = garden.units.make_unit_multiplier(new cljs.core.Keyword(null,\"cm\",\"cm\",540591536));\n\ngarden.units.cm_div = garden.units.make_unit_divider(new cljs.core.Keyword(null,\"cm\",\"cm\",540591536));\ngarden.units.mm = garden.units.make_unit_fn(new cljs.core.Keyword(null,\"mm\",\"mm\",-1652850560));\n\ngarden.units.mm_QMARK_ = garden.units.make_unit_predicate(new cljs.core.Keyword(null,\"mm\",\"mm\",-1652850560));\n\ngarden.units.mm_PLUS_ = garden.units.make_unit_adder(new cljs.core.Keyword(null,\"mm\",\"mm\",-1652850560));\n\ngarden.units.mm_ = garden.units.make_unit_subtractor(new cljs.core.Keyword(null,\"mm\",\"mm\",-1652850560));\n\ngarden.units.mm_STAR_ = garden.units.make_unit_multiplier(new cljs.core.Keyword(null,\"mm\",\"mm\",-1652850560));\n\ngarden.units.mm_div = garden.units.make_unit_divider(new cljs.core.Keyword(null,\"mm\",\"mm\",-1652850560));\ngarden.units.in$ = garden.units.make_unit_fn(new cljs.core.Keyword(null,\"in\",\"in\",-1531184865));\n\ngarden.units.in_QMARK_ = garden.units.make_unit_predicate(new cljs.core.Keyword(null,\"in\",\"in\",-1531184865));\n\ngarden.units.in_PLUS_ = garden.units.make_unit_adder(new cljs.core.Keyword(null,\"in\",\"in\",-1531184865));\n\ngarden.units.in_ = garden.units.make_unit_subtractor(new cljs.core.Keyword(null,\"in\",\"in\",-1531184865));\n\ngarden.units.in_STAR_ = garden.units.make_unit_multiplier(new cljs.core.Keyword(null,\"in\",\"in\",-1531184865));\n\ngarden.units.in_div = garden.units.make_unit_divider(new cljs.core.Keyword(null,\"in\",\"in\",-1531184865));\ngarden.units.px = garden.units.make_unit_fn(new cljs.core.Keyword(null,\"px\",\"px\",281329899));\n\ngarden.units.px_QMARK_ = garden.units.make_unit_predicate(new cljs.core.Keyword(null,\"px\",\"px\",281329899));\n\ngarden.units.px_PLUS_ = garden.units.make_unit_adder(new cljs.core.Keyword(null,\"px\",\"px\",281329899));\n\ngarden.units.px_ = garden.units.make_unit_subtractor(new cljs.core.Keyword(null,\"px\",\"px\",281329899));\n\ngarden.units.px_STAR_ = garden.units.make_unit_multiplier(new cljs.core.Keyword(null,\"px\",\"px\",281329899));\n\ngarden.units.px_div = garden.units.make_unit_divider(new cljs.core.Keyword(null,\"px\",\"px\",281329899));\ngarden.units.pt = garden.units.make_unit_fn(new cljs.core.Keyword(null,\"pt\",\"pt\",556460867));\n\ngarden.units.pt_QMARK_ = garden.units.make_unit_predicate(new cljs.core.Keyword(null,\"pt\",\"pt\",556460867));\n\ngarden.units.pt_PLUS_ = garden.units.make_unit_adder(new cljs.core.Keyword(null,\"pt\",\"pt\",556460867));\n\ngarden.units.pt_ = garden.units.make_unit_subtractor(new cljs.core.Keyword(null,\"pt\",\"pt\",556460867));\n\ngarden.units.pt_STAR_ = garden.units.make_unit_multiplier(new cljs.core.Keyword(null,\"pt\",\"pt\",556460867));\n\ngarden.units.pt_div = garden.units.make_unit_divider(new cljs.core.Keyword(null,\"pt\",\"pt\",556460867));\ngarden.units.pc = garden.units.make_unit_fn(new cljs.core.Keyword(null,\"pc\",\"pc\",512913453));\n\ngarden.units.pc_QMARK_ = garden.units.make_unit_predicate(new cljs.core.Keyword(null,\"pc\",\"pc\",512913453));\n\ngarden.units.pc_PLUS_ = garden.units.make_unit_adder(new cljs.core.Keyword(null,\"pc\",\"pc\",512913453));\n\ngarden.units.pc_ = garden.units.make_unit_subtractor(new cljs.core.Keyword(null,\"pc\",\"pc\",512913453));\n\ngarden.units.pc_STAR_ = garden.units.make_unit_multiplier(new cljs.core.Keyword(null,\"pc\",\"pc\",512913453));\n\ngarden.units.pc_div = garden.units.make_unit_divider(new cljs.core.Keyword(null,\"pc\",\"pc\",512913453));\ngarden.units.percent = garden.units.make_unit_fn(new cljs.core.Keyword(null,\"%\",\"%\",1704198600));\n\ngarden.units.percent_QMARK_ = garden.units.make_unit_predicate(new cljs.core.Keyword(null,\"%\",\"%\",1704198600));\n\ngarden.units.percent_PLUS_ = garden.units.make_unit_adder(new cljs.core.Keyword(null,\"%\",\"%\",1704198600));\n\ngarden.units.percent_ = garden.units.make_unit_subtractor(new cljs.core.Keyword(null,\"%\",\"%\",1704198600));\n\ngarden.units.percent_STAR_ = garden.units.make_unit_multiplier(new cljs.core.Keyword(null,\"%\",\"%\",1704198600));\n\ngarden.units.percent_div = garden.units.make_unit_divider(new cljs.core.Keyword(null,\"%\",\"%\",1704198600));\ngarden.units.em = garden.units.make_unit_fn(new cljs.core.Keyword(null,\"em\",\"em\",707813035));\n\ngarden.units.em_QMARK_ = garden.units.make_unit_predicate(new cljs.core.Keyword(null,\"em\",\"em\",707813035));\n\ngarden.units.em_PLUS_ = garden.units.make_unit_adder(new cljs.core.Keyword(null,\"em\",\"em\",707813035));\n\ngarden.units.em_ = garden.units.make_unit_subtractor(new cljs.core.Keyword(null,\"em\",\"em\",707813035));\n\ngarden.units.em_STAR_ = garden.units.make_unit_multiplier(new cljs.core.Keyword(null,\"em\",\"em\",707813035));\n\ngarden.units.em_div = garden.units.make_unit_divider(new cljs.core.Keyword(null,\"em\",\"em\",707813035));\ngarden.units.ex = garden.units.make_unit_fn(new cljs.core.Keyword(null,\"ex\",\"ex\",-1413771341));\n\ngarden.units.ex_QMARK_ = garden.units.make_unit_predicate(new cljs.core.Keyword(null,\"ex\",\"ex\",-1413771341));\n\ngarden.units.ex_PLUS_ = garden.units.make_unit_adder(new cljs.core.Keyword(null,\"ex\",\"ex\",-1413771341));\n\ngarden.units.ex_ = garden.units.make_unit_subtractor(new cljs.core.Keyword(null,\"ex\",\"ex\",-1413771341));\n\ngarden.units.ex_STAR_ = garden.units.make_unit_multiplier(new cljs.core.Keyword(null,\"ex\",\"ex\",-1413771341));\n\ngarden.units.ex_div = garden.units.make_unit_divider(new cljs.core.Keyword(null,\"ex\",\"ex\",-1413771341));\ngarden.units.ch = garden.units.make_unit_fn(new cljs.core.Keyword(null,\"ch\",\"ch\",-554717905));\n\ngarden.units.ch_QMARK_ = garden.units.make_unit_predicate(new cljs.core.Keyword(null,\"ch\",\"ch\",-554717905));\n\ngarden.units.ch_PLUS_ = garden.units.make_unit_adder(new cljs.core.Keyword(null,\"ch\",\"ch\",-554717905));\n\ngarden.units.ch_ = garden.units.make_unit_subtractor(new cljs.core.Keyword(null,\"ch\",\"ch\",-554717905));\n\ngarden.units.ch_STAR_ = garden.units.make_unit_multiplier(new cljs.core.Keyword(null,\"ch\",\"ch\",-554717905));\n\ngarden.units.ch_div = garden.units.make_unit_divider(new cljs.core.Keyword(null,\"ch\",\"ch\",-554717905));\ngarden.units.rem = garden.units.make_unit_fn(new cljs.core.Keyword(null,\"rem\",\"rem\",-976484757));\n\ngarden.units.rem_QMARK_ = garden.units.make_unit_predicate(new cljs.core.Keyword(null,\"rem\",\"rem\",-976484757));\n\ngarden.units.rem_PLUS_ = garden.units.make_unit_adder(new cljs.core.Keyword(null,\"rem\",\"rem\",-976484757));\n\ngarden.units.rem_ = garden.units.make_unit_subtractor(new cljs.core.Keyword(null,\"rem\",\"rem\",-976484757));\n\ngarden.units.rem_STAR_ = garden.units.make_unit_multiplier(new cljs.core.Keyword(null,\"rem\",\"rem\",-976484757));\n\ngarden.units.rem_div = garden.units.make_unit_divider(new cljs.core.Keyword(null,\"rem\",\"rem\",-976484757));\ngarden.units.vw = garden.units.make_unit_fn(new cljs.core.Keyword(null,\"vw\",\"vw\",1941049135));\n\ngarden.units.vw_QMARK_ = garden.units.make_unit_predicate(new cljs.core.Keyword(null,\"vw\",\"vw\",1941049135));\n\ngarden.units.vw_PLUS_ = garden.units.make_unit_adder(new cljs.core.Keyword(null,\"vw\",\"vw\",1941049135));\n\ngarden.units.vw_ = garden.units.make_unit_subtractor(new cljs.core.Keyword(null,\"vw\",\"vw\",1941049135));\n\ngarden.units.vw_STAR_ = garden.units.make_unit_multiplier(new cljs.core.Keyword(null,\"vw\",\"vw\",1941049135));\n\ngarden.units.vw_div = garden.units.make_unit_divider(new cljs.core.Keyword(null,\"vw\",\"vw\",1941049135));\ngarden.units.vh = garden.units.make_unit_fn(new cljs.core.Keyword(null,\"vh\",\"vh\",79552846));\n\ngarden.units.vh_QMARK_ = garden.units.make_unit_predicate(new cljs.core.Keyword(null,\"vh\",\"vh\",79552846));\n\ngarden.units.vh_PLUS_ = garden.units.make_unit_adder(new cljs.core.Keyword(null,\"vh\",\"vh\",79552846));\n\ngarden.units.vh_ = garden.units.make_unit_subtractor(new cljs.core.Keyword(null,\"vh\",\"vh\",79552846));\n\ngarden.units.vh_STAR_ = garden.units.make_unit_multiplier(new cljs.core.Keyword(null,\"vh\",\"vh\",79552846));\n\ngarden.units.vh_div = garden.units.make_unit_divider(new cljs.core.Keyword(null,\"vh\",\"vh\",79552846));\ngarden.units.vmin = garden.units.make_unit_fn(new cljs.core.Keyword(null,\"vmin\",\"vmin\",446546816));\n\ngarden.units.vmin_QMARK_ = garden.units.make_unit_predicate(new cljs.core.Keyword(null,\"vmin\",\"vmin\",446546816));\n\ngarden.units.vmin_PLUS_ = garden.units.make_unit_adder(new cljs.core.Keyword(null,\"vmin\",\"vmin\",446546816));\n\ngarden.units.vmin_ = garden.units.make_unit_subtractor(new cljs.core.Keyword(null,\"vmin\",\"vmin\",446546816));\n\ngarden.units.vmin_STAR_ = garden.units.make_unit_multiplier(new cljs.core.Keyword(null,\"vmin\",\"vmin\",446546816));\n\ngarden.units.vmin_div = garden.units.make_unit_divider(new cljs.core.Keyword(null,\"vmin\",\"vmin\",446546816));\ngarden.units.vmax = garden.units.make_unit_fn(new cljs.core.Keyword(null,\"vmax\",\"vmax\",-1435213544));\n\ngarden.units.vmax_QMARK_ = garden.units.make_unit_predicate(new cljs.core.Keyword(null,\"vmax\",\"vmax\",-1435213544));\n\ngarden.units.vmax_PLUS_ = garden.units.make_unit_adder(new cljs.core.Keyword(null,\"vmax\",\"vmax\",-1435213544));\n\ngarden.units.vmax_ = garden.units.make_unit_subtractor(new cljs.core.Keyword(null,\"vmax\",\"vmax\",-1435213544));\n\ngarden.units.vmax_STAR_ = garden.units.make_unit_multiplier(new cljs.core.Keyword(null,\"vmax\",\"vmax\",-1435213544));\n\ngarden.units.vmax_div = garden.units.make_unit_divider(new cljs.core.Keyword(null,\"vmax\",\"vmax\",-1435213544));\ngarden.units.deg = garden.units.make_unit_fn(new cljs.core.Keyword(null,\"deg\",\"deg\",-681556081));\n\ngarden.units.deg_QMARK_ = garden.units.make_unit_predicate(new cljs.core.Keyword(null,\"deg\",\"deg\",-681556081));\n\ngarden.units.deg_PLUS_ = garden.units.make_unit_adder(new cljs.core.Keyword(null,\"deg\",\"deg\",-681556081));\n\ngarden.units.deg_ = garden.units.make_unit_subtractor(new cljs.core.Keyword(null,\"deg\",\"deg\",-681556081));\n\ngarden.units.deg_STAR_ = garden.units.make_unit_multiplier(new cljs.core.Keyword(null,\"deg\",\"deg\",-681556081));\n\ngarden.units.deg_div = garden.units.make_unit_divider(new cljs.core.Keyword(null,\"deg\",\"deg\",-681556081));\ngarden.units.grad = garden.units.make_unit_fn(new cljs.core.Keyword(null,\"grad\",\"grad\",1125187229));\n\ngarden.units.grad_QMARK_ = garden.units.make_unit_predicate(new cljs.core.Keyword(null,\"grad\",\"grad\",1125187229));\n\ngarden.units.grad_PLUS_ = garden.units.make_unit_adder(new cljs.core.Keyword(null,\"grad\",\"grad\",1125187229));\n\ngarden.units.grad_ = garden.units.make_unit_subtractor(new cljs.core.Keyword(null,\"grad\",\"grad\",1125187229));\n\ngarden.units.grad_STAR_ = garden.units.make_unit_multiplier(new cljs.core.Keyword(null,\"grad\",\"grad\",1125187229));\n\ngarden.units.grad_div = garden.units.make_unit_divider(new cljs.core.Keyword(null,\"grad\",\"grad\",1125187229));\ngarden.units.rad = garden.units.make_unit_fn(new cljs.core.Keyword(null,\"rad\",\"rad\",-833983012));\n\ngarden.units.rad_QMARK_ = garden.units.make_unit_predicate(new cljs.core.Keyword(null,\"rad\",\"rad\",-833983012));\n\ngarden.units.rad_PLUS_ = garden.units.make_unit_adder(new cljs.core.Keyword(null,\"rad\",\"rad\",-833983012));\n\ngarden.units.rad_ = garden.units.make_unit_subtractor(new cljs.core.Keyword(null,\"rad\",\"rad\",-833983012));\n\ngarden.units.rad_STAR_ = garden.units.make_unit_multiplier(new cljs.core.Keyword(null,\"rad\",\"rad\",-833983012));\n\ngarden.units.rad_div = garden.units.make_unit_divider(new cljs.core.Keyword(null,\"rad\",\"rad\",-833983012));\ngarden.units.turn = garden.units.make_unit_fn(new cljs.core.Keyword(null,\"turn\",\"turn\",75759344));\n\ngarden.units.turn_QMARK_ = garden.units.make_unit_predicate(new cljs.core.Keyword(null,\"turn\",\"turn\",75759344));\n\ngarden.units.turn_PLUS_ = garden.units.make_unit_adder(new cljs.core.Keyword(null,\"turn\",\"turn\",75759344));\n\ngarden.units.turn_ = garden.units.make_unit_subtractor(new cljs.core.Keyword(null,\"turn\",\"turn\",75759344));\n\ngarden.units.turn_STAR_ = garden.units.make_unit_multiplier(new cljs.core.Keyword(null,\"turn\",\"turn\",75759344));\n\ngarden.units.turn_div = garden.units.make_unit_divider(new cljs.core.Keyword(null,\"turn\",\"turn\",75759344));\ngarden.units.s = garden.units.make_unit_fn(new cljs.core.Keyword(null,\"s\",\"s\",1705939918));\n\ngarden.units.s_QMARK_ = garden.units.make_unit_predicate(new cljs.core.Keyword(null,\"s\",\"s\",1705939918));\n\ngarden.units.s_PLUS_ = garden.units.make_unit_adder(new cljs.core.Keyword(null,\"s\",\"s\",1705939918));\n\ngarden.units.s_ = garden.units.make_unit_subtractor(new cljs.core.Keyword(null,\"s\",\"s\",1705939918));\n\ngarden.units.s_STAR_ = garden.units.make_unit_multiplier(new cljs.core.Keyword(null,\"s\",\"s\",1705939918));\n\ngarden.units.s_div = garden.units.make_unit_divider(new cljs.core.Keyword(null,\"s\",\"s\",1705939918));\ngarden.units.ms = garden.units.make_unit_fn(new cljs.core.Keyword(null,\"ms\",\"ms\",-1152709733));\n\ngarden.units.ms_QMARK_ = garden.units.make_unit_predicate(new cljs.core.Keyword(null,\"ms\",\"ms\",-1152709733));\n\ngarden.units.ms_PLUS_ = garden.units.make_unit_adder(new cljs.core.Keyword(null,\"ms\",\"ms\",-1152709733));\n\ngarden.units.ms_ = garden.units.make_unit_subtractor(new cljs.core.Keyword(null,\"ms\",\"ms\",-1152709733));\n\ngarden.units.ms_STAR_ = garden.units.make_unit_multiplier(new cljs.core.Keyword(null,\"ms\",\"ms\",-1152709733));\n\ngarden.units.ms_div = garden.units.make_unit_divider(new cljs.core.Keyword(null,\"ms\",\"ms\",-1152709733));\ngarden.units.Hz = garden.units.make_unit_fn(new cljs.core.Keyword(null,\"Hz\",\"Hz\",-1958732916));\n\ngarden.units.Hz_QMARK_ = garden.units.make_unit_predicate(new cljs.core.Keyword(null,\"Hz\",\"Hz\",-1958732916));\n\ngarden.units.Hz_PLUS_ = garden.units.make_unit_adder(new cljs.core.Keyword(null,\"Hz\",\"Hz\",-1958732916));\n\ngarden.units.Hz_ = garden.units.make_unit_subtractor(new cljs.core.Keyword(null,\"Hz\",\"Hz\",-1958732916));\n\ngarden.units.Hz_STAR_ = garden.units.make_unit_multiplier(new cljs.core.Keyword(null,\"Hz\",\"Hz\",-1958732916));\n\ngarden.units.Hz_div = garden.units.make_unit_divider(new cljs.core.Keyword(null,\"Hz\",\"Hz\",-1958732916));\ngarden.units.kHz = garden.units.make_unit_fn(new cljs.core.Keyword(null,\"kHz\",\"kHz\",240398466));\n\ngarden.units.kHz_QMARK_ = garden.units.make_unit_predicate(new cljs.core.Keyword(null,\"kHz\",\"kHz\",240398466));\n\ngarden.units.kHz_PLUS_ = garden.units.make_unit_adder(new cljs.core.Keyword(null,\"kHz\",\"kHz\",240398466));\n\ngarden.units.kHz_ = garden.units.make_unit_subtractor(new cljs.core.Keyword(null,\"kHz\",\"kHz\",240398466));\n\ngarden.units.kHz_STAR_ = garden.units.make_unit_multiplier(new cljs.core.Keyword(null,\"kHz\",\"kHz\",240398466));\n\ngarden.units.kHz_div = garden.units.make_unit_divider(new cljs.core.Keyword(null,\"kHz\",\"kHz\",240398466));\ngarden.units.dpi = garden.units.make_unit_fn(new cljs.core.Keyword(null,\"dpi\",\"dpi\",-986162832));\n\ngarden.units.dpi_QMARK_ = garden.units.make_unit_predicate(new cljs.core.Keyword(null,\"dpi\",\"dpi\",-986162832));\n\ngarden.units.dpi_PLUS_ = garden.units.make_unit_adder(new cljs.core.Keyword(null,\"dpi\",\"dpi\",-986162832));\n\ngarden.units.dpi_ = garden.units.make_unit_subtractor(new cljs.core.Keyword(null,\"dpi\",\"dpi\",-986162832));\n\ngarden.units.dpi_STAR_ = garden.units.make_unit_multiplier(new cljs.core.Keyword(null,\"dpi\",\"dpi\",-986162832));\n\ngarden.units.dpi_div = garden.units.make_unit_divider(new cljs.core.Keyword(null,\"dpi\",\"dpi\",-986162832));\ngarden.units.dpcm = garden.units.make_unit_fn(new cljs.core.Keyword(null,\"dpcm\",\"dpcm\",-1187601236));\n\ngarden.units.dpcm_QMARK_ = garden.units.make_unit_predicate(new cljs.core.Keyword(null,\"dpcm\",\"dpcm\",-1187601236));\n\ngarden.units.dpcm_PLUS_ = garden.units.make_unit_adder(new cljs.core.Keyword(null,\"dpcm\",\"dpcm\",-1187601236));\n\ngarden.units.dpcm_ = garden.units.make_unit_subtractor(new cljs.core.Keyword(null,\"dpcm\",\"dpcm\",-1187601236));\n\ngarden.units.dpcm_STAR_ = garden.units.make_unit_multiplier(new cljs.core.Keyword(null,\"dpcm\",\"dpcm\",-1187601236));\n\ngarden.units.dpcm_div = garden.units.make_unit_divider(new cljs.core.Keyword(null,\"dpcm\",\"dpcm\",-1187601236));\ngarden.units.dppx = garden.units.make_unit_fn(new cljs.core.Keyword(null,\"dppx\",\"dppx\",1920508843));\n\ngarden.units.dppx_QMARK_ = garden.units.make_unit_predicate(new cljs.core.Keyword(null,\"dppx\",\"dppx\",1920508843));\n\ngarden.units.dppx_PLUS_ = garden.units.make_unit_adder(new cljs.core.Keyword(null,\"dppx\",\"dppx\",1920508843));\n\ngarden.units.dppx_ = garden.units.make_unit_subtractor(new cljs.core.Keyword(null,\"dppx\",\"dppx\",1920508843));\n\ngarden.units.dppx_STAR_ = garden.units.make_unit_multiplier(new cljs.core.Keyword(null,\"dppx\",\"dppx\",1920508843));\n\ngarden.units.dppx_div = garden.units.make_unit_divider(new cljs.core.Keyword(null,\"dppx\",\"dppx\",1920508843));\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:doc","Functions and macros for working with CSS units.","~:file","garden/units.cljc","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",17],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$react","~$module$node_modules$react$index","~$create-react-class","~$module$node_modules$create_react_class$index","~$react-dom","~$module$node_modules$react_dom$index","~$clojure.spec.alpha","~$cljs.spec.alpha"],"~:use-macros",["^ ","~$defunit","~$garden.units"],"~:excludes",["~#set",["~$rem"]],"~:macros",["^ ","^H",["^ ","~:arglists",["~#list",[["~$name"],["^P","~$unit"]]],"^6","Create a suite of functions for unit creation, conversion,\n  validation, and arithmetic.","^8",263,"^9",4,"^7","garden/units.cljc","~:name","~$garden.units/defunit","~:ns","^I","~:macro",true]],"^R","^I","~:op","^T","~:imports",null,"~:requires",["^ ","~$cljs.reader","^Y","~$garden.types","^Z","~$types","^Z","~$garden.util","^10","~$util","^10","~$cljs.core","^12","~$goog","^13"],"~:seen",["^K",["~:require","~:require-macros"]],"~:uses",["^ ","~$read-string","^Y","~$CSSUnit","^Z"],"^16",["^ ","^I","^I","^12","^12","^Y","^Y"],"~:form",["^O",["~$ns","^I","Functions and macros for working with CSS units.",["^O",["~:refer-clojure","~:exclude",["^L"]]],["^O",["^15",["^Y","~:refer",["^18"]],["^Z","~:as","^[","^1>",["^19"]],["^10","^1?","^11"]]],["^O",["^16",["^I","^1>",["^H"]]]]]],"~:flags",["^ ","^15",["^K",[]],"^16",["^K",[]]],"~:js-deps",["^ "],"~:deps",["^13","^12","^Y","^Z","^10"]],"^T","^I","~:resource-id",["~:shadow.build.classpath/resource","garden/units.cljc"],"~:compiled-at",1570937842217,"~:resource-name","garden/units.cljc","~:warnings",[],"~:source","(ns garden.units\n  \"Functions and macros for working with CSS units.\"\n  (:refer-clojure :exclude [rem])\n  #?@(:clj\n     [(:require\n       [garden.types :as types]\n       [garden.util :as util])\n      (:import\n       [garden.types CSSUnit])])\n  #?@(:cljs\n      [(:require\n        [cljs.reader :refer [read-string]]\n        [garden.types :as types :refer [CSSUnit]]\n        [garden.util :as util])\n       (:require-macros\n        [garden.units :refer [defunit]])]))\n\n;;;; ## Unit families\n\n(def length-units\n  #{:in :cm :pc :mm :pt :px (keyword \"%\")})\n\n(def angular-units\n  #{:deg :grad :rad :turn})\n\n(def time-units\n  #{:s :ms})\n\n(def frequency-units\n  #{:Hz :kHz})\n\n(def resolution-units\n  #{:dpi :dpcm :dppx})\n\n;;;; ## Unit predicates\n\n(defn unit?\n  \"True if x is of type CSSUnit.\"\n  [x]\n  (instance? CSSUnit x))\n\n(defn length?\n  [x]\n  (and (unit? x)\n       (contains? length-units (:unit x))))\n\n(defn angle?\n  [x]\n  (and (unit? x)\n       (contains? angular-units (:unit x))))\n\n(defn time?\n  [x]\n  (and (unit? x)\n       (contains? time-units (:unit x))))\n\n(defn frequency?\n  [x]\n  (and (unit? x)\n       (contains? frequency-units (:unit x))))\n\n(defn resolution?\n  [x]\n  (and (unit? x)\n       (contains? resolution-units (:unit x))))\n\n;;;; ## Unit conversion\n\n(def ^{:private true\n       :doc \"Map associating CSS unit types to their conversion values.\"}\n  conversions\n  {;; Absolute units\n   :cm {:cm 1\n        :mm 10\n        :pc 2.36220473\n        :pt 28.3464567\n        :px 37.795275591}\n   :in {:cm 2.54\n        :in 1\n        :mm 25.4\n        :pc 6\n        :pt 72\n        :px 96}\n   :mm {:mm 1\n        :pt 2.83464567\n        :px 3.7795275591}\n   :pc {:mm 4.23333333\n        :pc 1\n        :pt 12\n        :px 16}\n   :pt {:pt 1\n        :px 1.3333333333}\n   :px {:px 1}\n   (keyword \"%\") {(keyword \"%\") 1}\n\n   ;; Relative untis\n   :em {:em 1}\n   :rem {:rem 1}\n\n   ;; Angular units\n   :deg {:deg 1\n         :grad 1.111111111\n         :rad 0.0174532925\n         :turn 0.002777778}\n   :grad {:grad 1\n          :rad 63.661977237\n          :turn 0.0025}\n   :rad {:rad 1\n         :turn 0.159154943}\n   :turn {:turn 1}\n\n   ;; Time units\n   :s {:ms 1000\n       :s 1}\n   :ms {:ms 1}\n\n   ;; Frequency units\n   :Hz {:Hz 1\n        :kHz 0.001}\n   :kHz {:kHz 1}})\n\n(defn- convertable?\n  \"True if unit is a key of convertable-units, false otherwise.\"\n  [unit]\n  (contains? conversions unit))\n\n(defn- convert\n  \"Convert a Unit with :unit left to a Unit with :unit right if possible.\"\n  [{m :magnitude left :unit} right]\n  (if (every? convertable? [left right])\n    (let [v1 (get-in conversions [left right])\n          v2 (get-in conversions [right left])]\n      (cond\n        v1\n        (CSSUnit. right (* v1 m))\n\n        v2\n        (CSSUnit. right (/ m v2))\n\n       ;; Both units are convertible but no conversion between them exists.\n       :else\n       (throw\n        (ex-info\n         (util/format \"Can't convert %s to %s\" (name left) (name right)) {}))))\n    ;; Display the inconvertible unit.\n    (let [x (first (drop-while convertable? [left right]))]\n      (throw (ex-info (str \"Inconvertible unit \" (name x)) {})))))\n\n;;;; ## Unit helpers\n\n(def ^{:doc \"Regular expression for matching a CSS unit. The magnitude\n             and unit are captured.\"\n       :private true}\n  unit-re\n  #\"([+-]?\\d+(?:\\.?\\d+)?)(p[xtc]|in|[cm]m|%|r?em|ex|ch|v(?:[wh]|m(?:in|ax))|deg|g?rad|turn|m?s|k?Hz|dp(?:i|cm|px))\")\n\n(defn read-unit\n  \"Read a `CSSUnit` object from the string `s`.\"\n  [s]\n  (when-let [[_ magnitude unit] (re-matches unit-re s)]\n    (let [unit (keyword unit)\n          magnitude (if magnitude (read-string magnitude) 0)]\n      (CSSUnit. unit magnitude))))\n\n(defn make-unit-predicate\n  \"Creates a function for verifying the given unit type.\"\n  [unit]\n  (fn [x] (and (unit? x) (= (:unit x) unit))))\n\n(defn make-unit-fn\n  \"Creates a function for creating and converting `CSSUnit`s for the\n  given unit. If a number n is passed the function it will produce a\n  new `CSSUnit` record with a the magnitude set to n. If a `CSSUnit`\n  is passed the function will attempt to convert it.\"\n  [unit]\n  (fn [x]\n    (cond\n      (number? x)\n      (CSSUnit. unit x)\n\n      (unit? x)\n      (if (and (= (unit x) unit))\n        x\n        (convert x unit))\n\n      :else\n      (let [;; Does `.getName` even work in CLJS? -- @noprompt\n            ex-message (util/format \"Unable to convert from %s to %s\"\n                                    (.getName type)\n                                    (name unit))\n            ;; TODO: This needs to be populated with more helpful\n            ;; data.\n            ex-data {:given {:type type\n                             :unit unit}}]\n        (throw\n         (ex-info ex-message ex-data))))))\n\n(defn make-unit-adder\n  \"Create a addition function for adding Units.\"\n  [unit]\n  (let [u (make-unit-fn unit)]\n    (fn u+\n      ([] (u 0))\n      ([x] (u x))\n      ([x y]\n         (let [{m1 :magnitude} (u x)\n               {m2 :magnitude} (u y)]\n           (u (+ m1 m2))))\n      ([x y & more]\n         (reduce u+ (u+ x y) more)))))\n\n(defn make-unit-subtractor\n  \"Create a subtraction function for subtracting Units.\"\n  [unit]\n  (let [u (make-unit-fn unit)]\n    (fn u-\n      ([x] (u (- x)))\n      ([x y]\n         (let [{m1 :magnitude} (u x)\n               {m2 :magnitude} (u y)]\n           (u (- m1 m2))))\n      ([x y & more]\n         (reduce u- (u- x y) more)))))\n\n(defn make-unit-multiplier\n  \"Create a multiplication function for multiplying Units.\"\n  [unit]\n  (let [u  (make-unit-fn unit)\n        op (if (= unit :%)\n            (fn percent*\n              [x y]\n              (/ (* x y) 100))\n            *)]\n    (fn u*\n      ([] (u 1))\n      ([x] (u x))\n      ([x y]\n         (let [{m1 :magnitude} (u x)\n               {m2 :magnitude} (u y)]\n           (u (op m1 m2))))\n      ([x y & more]\n         (reduce u* (u* x y) more)))))\n\n(defn make-unit-divider\n  \"Create a division function for dividing Units.\"\n  [unit]\n  (let [u (make-unit-fn unit)\n        op (if (= unit :%)\n            (fn percent-div\n              [x y]\n              (* 100 (/ x y)))\n             /)]\n    (fn ud\n      ([x] (u (/ 1 x)))\n      ([x y]\n         (let [{m1 :magnitude} (u x)\n               {m2 :magnitude} (u y)]\n           (u (op m1 m2))))\n      ([x y & more]\n         (reduce ud (ud x y) more)))))\n\n#?(:clj\n   (defmacro defunit\n     \"Create a suite of functions for unit creation, conversion,\n  validation, and arithmetic.\"\n     ([name]\n      `(defunit ~name ~name))\n     ([name unit]\n      (let [k (keyword unit)\n            append #(symbol (str name %))]\n        `(do\n           (def ~name (make-unit-fn ~k))\n           (def ~(append \\?) (make-unit-predicate ~k))\n           (def ~(append \\+) (make-unit-adder ~k))\n           (def ~(append \\-) (make-unit-subtractor ~k))\n           (def ~(append \\*) (make-unit-multiplier ~k))\n           (def ~(append \"-div\") (make-unit-divider ~k)))))))\n\n(comment\n  ;; This:\n  (defunit px)\n  ;; Is equivalent to:\n  (def px  (make-unit-fn :px))\n  (def px? (make-unit-predicate :px))\n  (def px+ (make-unit-adder :px))\n  (def px- (make-unit-subtractor :px))\n  (def px* (make-unit-multiplier :px))\n  (def px-div (make-unit-divider :px)))\n\n;; # Predefined units\n\n;; Absolute units\n\n(defunit cm)\n(defunit mm)\n(defunit in)\n(defunit px)\n(defunit pt)\n(defunit pc)\n(defunit percent \"%\")\n\n;; Font-relative units\n\n(defunit em)\n(defunit ex)\n(defunit ch)\n(defunit rem)\n\n;; Viewport-percentage lengths\n\n(defunit vw)\n(defunit vh)\n(defunit vmin)\n(defunit vmax)\n\n;; Angles\n\n(defunit deg)\n(defunit grad)\n(defunit rad)\n(defunit turn)\n\n;; Times\n\n(defunit s)\n(defunit ms)\n\n;; Frequencies\n\n(defunit Hz)\n(defunit kHz)\n\n;; Resolutions\n\n(defunit dpi)\n(defunit dpcm)\n(defunit dppx)\n","~:reader-features",["^K",["~:cljs"]],"~:cljc",true,"~:source-map-compact",["^ ","mappings","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","names",["garden.units/length-units","cljs.core.keyword.cljs$core$IFn$_invoke$arity$1","garden.units/angular-units","garden.units/time-units","garden.units/frequency-units","garden.units/resolution-units","garden.units/unit?","x","garden.types/CSSUnit","garden.units/length?","cljs.core/contains?","garden.units/angle?","garden.units/time?","garden.units/frequency?","garden.units/resolution?","garden.units/conversions","garden.units/convertable?","unit","p__40746","map__40747","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","cljs.core.get.cljs$core$IFn$_invoke$arity$2","garden.units/convert","m","left","right","cljs.core/every?","v1","cljs.core.get_in.cljs$core$IFn$_invoke$arity$2","v2","cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2","garden.util.format.cljs$core$IFn$_invoke$arity$variadic","cljs.core/name","cljs.core/first","cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2","garden.units/unit-re","garden.units/read-unit","s","temp__5735__auto__","vec__40749","cljs.core.nth.cljs$core$IFn$_invoke$arity$3","_","magnitude","cljs.core/re-matches","cljs.reader.read_string.cljs$core$IFn$_invoke$arity$1","garden.units/make-unit-predicate","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2","garden.units/make-unit-fn","ex-message","cljs.core/type","ex-data","garden.units/make-unit-adder","u","y","map__40752","map__40753","m1","m2","G__40756","more","cljs.core.reduce.cljs$core$IFn$_invoke$arity$3","u+","garden$units$make_unit_adder_$_u_PLUS_.cljs$core$IFn$_invoke$arity$2","garden.units/make-unit-subtractor","G__40757","map__40758","map__40759","G__40762","u-","garden$units$make_unit_subtractor_$_u_.cljs$core$IFn$_invoke$arity$2","garden.units/make-unit-multiplier","op","cljs.core/*","map__40768","map__40769","G__40780","u*","garden$units$make_unit_multiplier_$_u_STAR_.cljs$core$IFn$_invoke$arity$2","garden.units/make-unit-divider","cljs.core//","G__40784","map__40785","map__40786","G__40794","ud","garden$units$make_unit_divider_$_ud.cljs$core$IFn$_invoke$arity$2","garden.units/cm?","garden.units/cm+","garden.units/cm-","garden.units/cm*","garden.units/cm-div","garden.units/cm","garden.units/mm?","garden.units/mm+","garden.units/mm-","garden.units/mm*","garden.units/mm-div","garden.units/mm","garden.units/in?","garden.units/in+","garden.units/in-","garden.units/in*","garden.units/in-div","garden.units/in","garden.units/px?","garden.units/px+","garden.units/px-","garden.units/px*","garden.units/px-div","garden.units/px","garden.units/pt?","garden.units/pt+","garden.units/pt-","garden.units/pt*","garden.units/pt-div","garden.units/pt","garden.units/pc?","garden.units/pc+","garden.units/pc-","garden.units/pc*","garden.units/pc-div","garden.units/pc","garden.units/percent?","garden.units/percent+","garden.units/percent-","garden.units/percent*","garden.units/percent-div","garden.units/percent","garden.units/em?","garden.units/em+","garden.units/em-","garden.units/em*","garden.units/em-div","garden.units/em","garden.units/ex?","garden.units/ex+","garden.units/ex-","garden.units/ex*","garden.units/ex-div","garden.units/ex","garden.units/ch?","garden.units/ch+","garden.units/ch-","garden.units/ch*","garden.units/ch-div","garden.units/ch","garden.units/rem?","garden.units/rem+","garden.units/rem-","garden.units/rem*","garden.units/rem-div","garden.units/rem","garden.units/vw?","garden.units/vw+","garden.units/vw-","garden.units/vw*","garden.units/vw-div","garden.units/vw","garden.units/vh?","garden.units/vh+","garden.units/vh-","garden.units/vh*","garden.units/vh-div","garden.units/vh","garden.units/vmin?","garden.units/vmin+","garden.units/vmin-","garden.units/vmin*","garden.units/vmin-div","garden.units/vmin","garden.units/vmax?","garden.units/vmax+","garden.units/vmax-","garden.units/vmax*","garden.units/vmax-div","garden.units/vmax","garden.units/deg?","garden.units/deg+","garden.units/deg-","garden.units/deg*","garden.units/deg-div","garden.units/deg","garden.units/grad?","garden.units/grad+","garden.units/grad-","garden.units/grad*","garden.units/grad-div","garden.units/grad","garden.units/rad?","garden.units/rad+","garden.units/rad-","garden.units/rad*","garden.units/rad-div","garden.units/rad","garden.units/turn?","garden.units/turn+","garden.units/turn-","garden.units/turn*","garden.units/turn-div","garden.units/turn","garden.units/s?","garden.units/s+","garden.units/s-","garden.units/s*","garden.units/s-div","garden.units/s","garden.units/ms?","garden.units/ms+","garden.units/ms-","garden.units/ms*","garden.units/ms-div","garden.units/ms","garden.units/Hz?","garden.units/Hz+","garden.units/Hz-","garden.units/Hz*","garden.units/Hz-div","garden.units/Hz","garden.units/kHz?","garden.units/kHz+","garden.units/kHz-","garden.units/kHz*","garden.units/kHz-div","garden.units/kHz","garden.units/dpi?","garden.units/dpi+","garden.units/dpi-","garden.units/dpi*","garden.units/dpi-div","garden.units/dpi","garden.units/dpcm?","garden.units/dpcm+","garden.units/dpcm-","garden.units/dpcm*","garden.units/dpcm-div","garden.units/dpcm","garden.units/dppx?","garden.units/dppx+","garden.units/dppx-","garden.units/dppx*","garden.units/dppx-div","garden.units/dppx"]]],"~:cache-keys",["~#cmap",[["^1D","cljs/tools/reader/impl/utils.cljs"],[1556316222245,"~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^K",[]],"~:deps-syms",["^13","^12","~$clojure.string","~$goog.string"]]],["^1D","goog/math/math.js"],[1559507890775,"^1Q",["^ ","^1R",null,"^1S",["^K",[]],"^1T",["^13","~$goog.array","~$goog.asserts"]]],["^1D","goog/string/stringformat.js"],[1559507890775,"^1Q",["^ ","^1R",null,"^1S",["^K",[]],"^1T",["^13","^1V"]]],["^1D","goog/array/array.js"],[1559507890775,"^1Q",["^ ","^1R",null,"^1S",["^K",[]],"^1T",["^13","^1X"]]],["^1D","goog/debug/error.js"],[1559507890775,"^1Q",["^ ","^1R",null,"^1S",["^K",[]],"^1T",["^13"]]],["^1D","garden/units.cljc"],[1569047779983,"^1Q",["^ ","^1R",null,"^1S",["^K",[]],"^1T",["^13","^12","^Y","^Z","^10"]]],["^1D","cljs/tools/reader/edn.cljs"],[1556316222245,"^1Q",["^ ","^1R",null,"^1S",["^K",[]],"^1T",["^13","^12","~$cljs.tools.reader.impl.errors","~$cljs.tools.reader.reader-types","~$cljs.tools.reader.impl.utils","~$cljs.tools.reader.impl.commons","~$cljs.tools.reader","^1V","~$goog.string.StringBuffer"]]],["^1D","goog/dom/nodetype.js"],[1559507890775,"^1Q",["^ ","^1R",null,"^1S",["^K",[]],"^1T",["^13"]]],["^1D","cljs/tools/reader/impl/inspect.cljs"],[1556316222245,"^1Q",["^ ","^1R",null,"^1S",["^K",[]],"^1T",["^13","^12"]]],["^1D","cljs/tools/reader.cljs"],[1556316222245,"^1Q",["^ ","^1R",null,"^1S",["^K",[]],"^1T",["^13","^12","^1Z","^1[","^20","^1Y","^1W","^1V","^22"]]],["^1D","goog/object/object.js"],[1559507890775,"^1Q",["^ ","^1R",null,"^1S",["^K",[]],"^1T",["^13"]]],"~:SHADOW-TIMESTAMP",[1570928878000,1556316222000],["^1D","goog/math/long.js"],[1559507890775,"^1Q",["^ ","^1R",null,"^1S",["^K",[]],"^1T",["^13","^1X","~$goog.reflect"]]],["^1D","goog/string/internal.js"],[1559507890775,"^1Q",["^ ","^1R",null,"^1S",["^K",[]],"^1T",["^13"]]],["^1D","goog/functions/functions.js"],[1559507890775,"^1Q",["^ ","^1R",null,"^1S",["^K",[]],"^1T",["^13"]]],["^1D","goog/structs/map.js"],[1559507890775,"^1Q",["^ ","^1R",null,"^1S",["^K",[]],"^1T",["^13","~$goog.iter.Iterator","~$goog.iter.StopIteration"]]],["^1D","cljs/reader.cljs"],[1556316222100,"^1Q",["^ ","^1R",null,"^1S",["^K",[]],"^1T",["^13","^12","~$goog.object","^21","~$cljs.tools.reader.edn","^22"]]],["^1D","goog/asserts/asserts.js"],[1559507890775,"^1Q",["^ ","^1R",null,"^1S",["^K",[]],"^1T",["^13","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^1D","garden/types.cljc"],[1569047779983,"^1Q",["^ ","^1R",null,"^1S",["^K",[]],"^1T",["^13","^12"]]],["^1D","goog/uri/uri.js"],[1559507890775,"^1Q",["^ ","^1R",null,"^1S",["^K",[]],"^1T",["^13","^1W","^1X","^1V","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^1D","goog/base.js"],[1559507890775,"^1Q",["^ ","^1R",null,"^1S",["^K",[]],"^1T",[]]],["^1D","garden/util.cljc"],[1569047779983,"^1Q",["^ ","^1R",null,"^1S",["^K",[]],"^1T",["^13","^12","^1U","^Z","^1V","~$goog.string.format"]]],["^1D","goog/structs/structs.js"],[1559507890775,"^1Q",["^ ","^1R",null,"^1S",["^K",[]],"^1T",["^13","^1W","^27"]]],["^1D","cljs/tools/reader/impl/errors.cljs"],[1556316222245,"^1Q",["^ ","^1R",null,"^1S",["^K",[]],"^1T",["^13","^12","^1Z","^1U","~$cljs.tools.reader.impl.inspect"]]],["^1D","clojure/string.cljs"],[1556316222100,"^1Q",["^ ","^1R",null,"^1S",["^K",[]],"^1T",["^13","^12","^1V","^22"]]],["^1D","goog/string/string.js"],[1559507890775,"^1Q",["^ ","^1R",null,"^1S",["^K",[]],"^1T",["^13","~$goog.string.internal"]]],["^1D","goog/reflect/reflect.js"],[1559507890775,"^1Q",["^ ","^1R",null,"^1S",["^K",[]],"^1T",["^13"]]],["^1D","goog/string/stringbuffer.js"],[1559507890775,"^1Q",["^ ","^1R",null,"^1S",["^K",[]],"^1T",["^13"]]],["^1D","cljs/tools/reader/reader_types.cljs"],[1556316222245,"^1Q",["^ ","^1R",null,"^1S",["^K",[]],"^1T",["^13","^12","^1[","^1V","^22"]]],["^1D","goog/iter/iter.js"],[1559507890775,"^1Q",["^ ","^1R",null,"^1S",["^K",[]],"^1T",["^13","^1W","^1X","~$goog.functions","~$goog.math"]]],["^1D","cljs/tools/reader/impl/commons.cljs"],[1556316222245,"^1Q",["^ ","^1R",null,"^1S",["^K",[]],"^1T",["^13","^12","^1Y","^1Z","^1["]]],["^1D","cljs/core.cljs"],[1556316222100,"^1Q",["^ ","^1R",null,"^1S",["^K",[]],"^1T",["~$goog.math.Long","~$goog.math.Integer","^1V","^27","^1W","~$goog.Uri","^22"]]],["^1D","goog/math/integer.js"],[1559507890775,"^1Q",["^ ","^1R",null,"^1S",["^K",[]],"^1T",["^13"]]],["^1D","goog/uri/utils.js"],[1559507890775,"^1Q",["^ ","^1R",null,"^1S",["^K",[]],"^1T",["^13","^1W","^1X","^1V"]]]]],"~:clj-info",["^ ","jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/tools.reader/1.3.0/tools.reader-1.3.0.jar!/clojure/tools/reader/default_data_readers.clj",1556316222000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/edn.clj",1559876774000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/externs.clj",1556316222000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/core.cljc",1556316222000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/string.clj",1559876774000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/pprint.clj",1559876774000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/env.cljc",1556316222000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/tools.reader/1.3.0/tools.reader-1.3.0.jar!/clojure/tools/reader/impl/inspect.clj",1556316222000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/tools.reader/1.3.0/tools.reader-1.3.0.jar!/clojure/tools/reader/reader_types.clj",1556316222000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/source_map/base64_vlq.clj",1556316222000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/source_map.clj",1556316222000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/garden/garden/1.3.9/garden-1.3.9.jar!/garden/util.cljc",1569047779000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/java/io.clj",1559876774000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/tools.reader/1.3.0/tools.reader-1.3.0.jar!/clojure/tools/reader.clj",1556316222000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/js_deps.cljc",1556316222000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/set.clj",1559876774000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/tools.reader/1.3.0/tools.reader-1.3.0.jar!/clojure/tools/reader/impl/errors.clj",1556316222000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/garden/garden/1.3.9/garden-1.3.9.jar!/garden/types.cljc",1569047779000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/compiler.cljc",1556316222000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/util.cljc",1556316222000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/reader.clj",1556316222000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/source_map/base64.clj",1556316222000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/tagged_literals.cljc",1556316222000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/instant.clj",1559876774000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/core.clj",1559876774000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/tools.reader/1.3.0/tools.reader-1.3.0.jar!/cljs/tools/reader/reader_types.clj",1556316222000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/data.json/0.2.6/data.json-0.2.6.jar!/clojure/data/json.clj",1556312825000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/analyzer.cljc",1556316222000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/garden/garden/1.3.9/garden-1.3.9.jar!/garden/units.cljc",1569047779000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","Functions and macros for working with CSS units.","^7","garden/units.cljc","^8",1,"^9",5,"^:",1,"^;",17],"^<",["^ ","^=","^>","^?","^@","^A","^B","^C","^D","^E","^F"],"^G",["^ ","^H","^I"],"^J",["^K",["^L"]],"^M",["^ ","^H",["^ ","^N",["^O",[["^P"],["^P","^Q"]]],"^6","Create a suite of functions for unit creation, conversion,\n  validation, and arithmetic.","^8",263,"^9",4,"^7","garden/units.cljc","^R","^S","^T","^I","^U",true]],"^R","^I","^W",null,"^X",["^ ","^Y","^Y","^Z","^Z","^[","^Z","^10","^10","^11","^10","^12","^12","^13","^13"],"^14",["^K",["^15","^16"]],"^17",["^ ","^18","^Y","^19","^Z"],"~:defs",["^ ","~$percent",["^ ","^R","~$garden.units/percent","^7","garden/units.cljc","^8",300,"^9",1,"^:",300,"^;",17,"^5",["^ ","^7","garden/units.cljc","^8",300,"^9",10,"^:",300,"^;",17],"~:tag","~$function"],"~$make-unit-divider",["^ ","~:protocol-inline",null,"^5",["^ ","^7","garden/units.cljc","^8",244,"^9",7,"^:",244,"^;",24,"^N",["^O",["~$quote",["^O",[["^Q"]]]]],"^6","Create a division function for dividing Units."],"^R","~$garden.units/make-unit-divider","^7","garden/units.cljc","^;",24,"~:method-params",["^O",[["^Q"]]],"~:protocol-impl",null,"~:arglists-meta",["^O",[null,null]],"^9",1,"~:variadic?",false,"^8",244,"~:ret-tag","^3?","^:",244,"~:max-fixed-arity",1,"~:fn-var",true,"^N",["^O",["^3B",["^O",[["^Q"]]]]],"^6","Create a division function for dividing Units."],"~$mm?",["^ ","^R","~$garden.units/mm?","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",295,"^9",1,"^3>","^3?"],"~$rad-div",["^ ","^R","~$garden.units/rad-div","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",320,"^9",1,"^3>","^3?"],"~$ch+",["^ ","^R","~$garden.units/ch+","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",306,"^9",1,"^3>","^3?"],"~$vmax?",["^ ","^R","~$garden.units/vmax?","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",314,"^9",1,"^3>","^3?"],"~$percent*",["^ ","^R","~$garden.units/percent*","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",300,"^9",1,"^3>","^3?"],"~$dpi-div",["^ ","^R","~$garden.units/dpi-div","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",335,"^9",1,"^3>","^3?"],"~$s*",["^ ","^R","~$garden.units/s*","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",325,"^9",1,"^3>","^3?"],"~$ms",["^ ","^R","~$garden.units/ms","^7","garden/units.cljc","^8",326,"^9",1,"^:",326,"^;",12,"^5",["^ ","^7","garden/units.cljc","^8",326,"^9",10,"^:",326,"^;",12],"^3>","^3?"],"~$ms*",["^ ","^R","~$garden.units/ms*","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",326,"^9",1,"^3>","^3?"],"~$convertable?",["^ ","^3A",null,"^5",["^ ","^7","garden/units.cljc","^8",122,"^9",8,"^:",122,"^;",20,"~:private",true,"^N",["^O",["^3B",["^O",[["^Q"]]]]],"^6","True if unit is a key of convertable-units, false otherwise."],"^42",true,"^R","~$garden.units/convertable?","^7","garden/units.cljc","^;",20,"^3D",["^O",[["^Q"]]],"^3E",null,"^3F",["^O",[null,null]],"^9",1,"^3G",false,"^8",122,"^3H","~$boolean","^:",122,"^3I",1,"^3J",true,"^N",["^O",["^3B",["^O",[["^Q"]]]]],"^6","True if unit is a key of convertable-units, false otherwise."],"~$dpcm+",["^ ","^R","~$garden.units/dpcm+","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",336,"^9",1,"^3>","^3?"],"~$dppx*",["^ ","^R","~$garden.units/dppx*","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",337,"^9",1,"^3>","^3?"],"~$ch*",["^ ","^R","~$garden.units/ch*","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",306,"^9",1,"^3>","^3?"],"~$mm+",["^ ","^R","~$garden.units/mm+","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",295,"^9",1,"^3>","^3?"],"~$rad",["^ ","^R","~$garden.units/rad","^7","garden/units.cljc","^8",320,"^9",1,"^:",320,"^;",13,"^5",["^ ","^7","garden/units.cljc","^8",320,"^9",10,"^:",320,"^;",13],"^3>","^3?"],"~$px-",["^ ","^R","~$garden.units/px-","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",297,"^9",1,"^3>","^3?"],"~$cm-div",["^ ","^R","~$garden.units/cm-div","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",294,"^9",1,"^3>","^3?"],"~$turn+",["^ ","^R","~$garden.units/turn+","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",321,"^9",1,"^3>","^3?"],"~$length?",["^ ","^3A",null,"^5",["^ ","^7","garden/units.cljc","^8",42,"^9",7,"^:",42,"^;",14,"^N",["^O",["^3B",["^O",[["~$x"]]]]]],"^R","~$garden.units/length?","^7","garden/units.cljc","^;",14,"^3D",["^O",[["~$x"]]],"^3E",null,"^3F",["^O",[null,null]],"^9",1,"^3G",false,"^8",42,"^3H","^44","^:",42,"^3I",1,"^3J",true,"^N",["^O",["^3B",["^O",[["~$x"]]]]]],"~$grad",["^ ","^R","~$garden.units/grad","^7","garden/units.cljc","^8",319,"^9",1,"^:",319,"^;",14,"^5",["^ ","^7","garden/units.cljc","^8",319,"^9",10,"^:",319,"^;",14],"^3>","^3?"],"~$dppx-",["^ ","^R","~$garden.units/dppx-","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",337,"^9",1,"^3>","^3?"],"~$percent+",["^ ","^R","~$garden.units/percent+","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",300,"^9",1,"^3>","^3?"],"~$em*",["^ ","^R","~$garden.units/em*","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",304,"^9",1,"^3>","^3?"],"~$ms-",["^ ","^R","~$garden.units/ms-","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",326,"^9",1,"^3>","^3?"],"~$dpi+",["^ ","^R","~$garden.units/dpi+","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",335,"^9",1,"^3>","^3?"],"~$vh+",["^ ","^R","~$garden.units/vh+","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",312,"^9",1,"^3>","^3?"],"~$rad*",["^ ","^R","~$garden.units/rad*","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",320,"^9",1,"^3>","^3?"],"~$kHz-div",["^ ","^R","~$garden.units/kHz-div","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",331,"^9",1,"^3>","^3?"],"~$vmax+",["^ ","^R","~$garden.units/vmax+","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",314,"^9",1,"^3>","^3?"],"~$vw-div",["^ ","^R","~$garden.units/vw-div","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",311,"^9",1,"^3>","^3?"],"~$mm-",["^ ","^R","~$garden.units/mm-","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",295,"^9",1,"^3>","^3?"],"~$in",["^ ","^R","~$garden.units/in","^7","garden/units.cljc","^8",296,"^9",1,"^:",296,"^;",12,"^5",["^ ","^7","garden/units.cljc","^8",296,"^9",10,"^:",296,"^;",12],"^3>","^3?"],"~$pt*",["^ ","^R","~$garden.units/pt*","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",298,"^9",1,"^3>","^3?"],"~$make-unit-subtractor",["^ ","^3A",null,"^5",["^ ","^7","garden/units.cljc","^8",212,"^9",7,"^:",212,"^;",27,"^N",["^O",["^3B",["^O",[["^Q"]]]]],"^6","Create a subtraction function for subtracting Units."],"^R","~$garden.units/make-unit-subtractor","^7","garden/units.cljc","^;",27,"^3D",["^O",[["^Q"]]],"^3E",null,"^3F",["^O",[null,null]],"^9",1,"^3G",false,"^8",212,"^3H","^3?","^:",212,"^3I",1,"^3J",true,"^N",["^O",["^3B",["^O",[["^Q"]]]]],"^6","Create a subtraction function for subtracting Units."],"~$mm-div",["^ ","^R","~$garden.units/mm-div","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",295,"^9",1,"^3>","^3?"],"~$vmin",["^ ","^R","~$garden.units/vmin","^7","garden/units.cljc","^8",313,"^9",1,"^:",313,"^;",14,"^5",["^ ","^7","garden/units.cljc","^8",313,"^9",10,"^:",313,"^;",14],"^3>","^3?"],"~$mm",["^ ","^R","~$garden.units/mm","^7","garden/units.cljc","^8",295,"^9",1,"^:",295,"^;",12,"^5",["^ ","^7","garden/units.cljc","^8",295,"^9",10,"^:",295,"^;",12],"^3>","^3?"],"~$em?",["^ ","^R","~$garden.units/em?","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",304,"^9",1,"^3>","^3?"],"~$cm?",["^ ","^R","~$garden.units/cm?","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",294,"^9",1,"^3>","^3?"],"~$time?",["^ ","^3A",null,"^5",["^ ","^7","garden/units.cljc","^8",52,"^9",7,"^:",52,"^;",12,"^N",["^O",["^3B",["^O",[["~$x"]]]]]],"^R","~$garden.units/time?","^7","garden/units.cljc","^;",12,"^3D",["^O",[["~$x"]]],"^3E",null,"^3F",["^O",[null,null]],"^9",1,"^3G",false,"^8",52,"^3H","^44","^:",52,"^3I",1,"^3J",true,"^N",["^O",["^3B",["^O",[["~$x"]]]]]],"~$dpi?",["^ ","^R","~$garden.units/dpi?","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",335,"^9",1,"^3>","^3?"],"~$make-unit-multiplier",["^ ","^3A",null,"^5",["^ ","^7","garden/units.cljc","^8",225,"^9",7,"^:",225,"^;",27,"^N",["^O",["^3B",["^O",[["^Q"]]]]],"^6","Create a multiplication function for multiplying Units."],"^R","~$garden.units/make-unit-multiplier","^7","garden/units.cljc","^;",27,"^3D",["^O",[["^Q"]]],"^3E",null,"^3F",["^O",[null,null]],"^9",1,"^3G",false,"^8",225,"^3H","^3?","^:",225,"^3I",1,"^3J",true,"^N",["^O",["^3B",["^O",[["^Q"]]]]],"^6","Create a multiplication function for multiplying Units."],"~$vmin-",["^ ","^R","~$garden.units/vmin-","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",313,"^9",1,"^3>","^3?"],"~$unit?",["^ ","^3A",null,"^5",["^ ","^7","garden/units.cljc","^8",37,"^9",7,"^:",37,"^;",12,"^N",["^O",["^3B",["^O",[["~$x"]]]]],"^6","True if x is of type CSSUnit."],"^R","~$garden.units/unit?","^7","garden/units.cljc","^;",12,"^3D",["^O",[["~$x"]]],"^3E",null,"^3F",["^O",[null,null]],"^9",1,"^3G",false,"^8",37,"^3H","^44","^:",37,"^3I",1,"^3J",true,"^N",["^O",["^3B",["^O",[["~$x"]]]]],"^6","True if x is of type CSSUnit."],"~$deg-div",["^ ","^R","~$garden.units/deg-div","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",318,"^9",1,"^3>","^3?"],"~$vw-",["^ ","^R","~$garden.units/vw-","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",311,"^9",1,"^3>","^3?"],"~$ch-",["^ ","^R","~$garden.units/ch-","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",306,"^9",1,"^3>","^3?"],"~$kHz",["^ ","^R","~$garden.units/kHz","^7","garden/units.cljc","^8",331,"^9",1,"^:",331,"^;",13,"^5",["^ ","^7","garden/units.cljc","^8",331,"^9",10,"^:",331,"^;",13],"^3>","^3?"],"~$convert",["^ ","^3A",null,"^5",["^ ","^7","garden/units.cljc","^8",127,"^9",8,"^:",127,"^;",15,"^42",true,"^N",["^O",["^3B",["^O",[[["^ ","~$m","~:magnitude","~$left","~:unit"],"~$right"]]]]],"^6","Convert a Unit with :unit left to a Unit with :unit right if possible."],"^42",true,"^R","~$garden.units/convert","^7","garden/units.cljc","^;",15,"^3D",["^O",[["~$p__40746","^5Y"]]],"^3E",null,"^3F",["^O",[null,null]],"^9",1,"^3G",false,"^8",127,"^3H","~$garden.types/CSSUnit","^:",127,"^3I",2,"^3J",true,"^N",["^O",["^3B",["^O",[[["^ ","~$m","^5V","^5W","^5X"],"^5Y"]]]]],"^6","Convert a Unit with :unit left to a Unit with :unit right if possible."],"~$resolution?",["^ ","^3A",null,"^5",["^ ","^7","garden/units.cljc","^8",62,"^9",7,"^:",62,"^;",18,"^N",["^O",["^3B",["^O",[["~$x"]]]]]],"^R","~$garden.units/resolution?","^7","garden/units.cljc","^;",18,"^3D",["^O",[["~$x"]]],"^3E",null,"^3F",["^O",[null,null]],"^9",1,"^3G",false,"^8",62,"^3H","^44","^:",62,"^3I",1,"^3J",true,"^N",["^O",["^3B",["^O",[["~$x"]]]]]],"~$ch-div",["^ ","^R","~$garden.units/ch-div","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",306,"^9",1,"^3>","^3?"],"~$cm-",["^ ","^R","~$garden.units/cm-","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",294,"^9",1,"^3>","^3?"],"~$pt",["^ ","^R","~$garden.units/pt","^7","garden/units.cljc","^8",298,"^9",1,"^:",298,"^;",12,"^5",["^ ","^7","garden/units.cljc","^8",298,"^9",10,"^:",298,"^;",12],"^3>","^3?"],"~$frequency-units",["^ ","^R","~$garden.units/frequency-units","^7","garden/units.cljc","^8",29,"^9",1,"^:",29,"^;",21,"^5",["^ ","^7","garden/units.cljc","^8",29,"^9",6,"^:",29,"^;",21],"^3>","~$cljs.core/ISet"],"~$grad?",["^ ","^R","~$garden.units/grad?","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",319,"^9",1,"^3>","^3?"],"~$vh?",["^ ","^R","~$garden.units/vh?","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",312,"^9",1,"^3>","^3?"],"~$make-unit-adder",["^ ","^3A",null,"^5",["^ ","^7","garden/units.cljc","^8",198,"^9",7,"^:",198,"^;",22,"^N",["^O",["^3B",["^O",[["^Q"]]]]],"^6","Create a addition function for adding Units."],"^R","~$garden.units/make-unit-adder","^7","garden/units.cljc","^;",22,"^3D",["^O",[["^Q"]]],"^3E",null,"^3F",["^O",[null,null]],"^9",1,"^3G",false,"^8",198,"^3H","^3?","^:",198,"^3I",1,"^3J",true,"^N",["^O",["^3B",["^O",[["^Q"]]]]],"^6","Create a addition function for adding Units."],"~$vmin*",["^ ","^R","~$garden.units/vmin*","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",313,"^9",1,"^3>","^3?"],"~$dpcm*",["^ ","^R","~$garden.units/dpcm*","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",336,"^9",1,"^3>","^3?"],"~$read-unit",["^ ","^3A",null,"^5",["^ ","^7","garden/units.cljc","^8",157,"^9",7,"^:",157,"^;",16,"^N",["^O",["^3B",["^O",[["~$s"]]]]],"^6","Read a `CSSUnit` object from the string `s`."],"^R","~$garden.units/read-unit","^7","garden/units.cljc","^;",16,"^3D",["^O",[["~$s"]]],"^3E",null,"^3F",["^O",[null,null]],"^9",1,"^3G",false,"^8",157,"^3H",["^K",["^60","~$clj-nil"]],"^:",157,"^3I",1,"^3J",true,"^N",["^O",["^3B",["^O",[["~$s"]]]]],"^6","Read a `CSSUnit` object from the string `s`."],"~$pc-",["^ ","^R","~$garden.units/pc-","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",299,"^9",1,"^3>","^3?"],"~$rad-",["^ ","^R","~$garden.units/rad-","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",320,"^9",1,"^3>","^3?"],"~$px*",["^ ","^R","~$garden.units/px*","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",297,"^9",1,"^3>","^3?"],"~$rem+",["^ ","^R","~$garden.units/rem+","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",307,"^9",1,"^3>","^3?"],"~$Hz-",["^ ","^R","~$garden.units/Hz-","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",330,"^9",1,"^3>","^3?"],"~$length-units",["^ ","^R","~$garden.units/length-units","^7","garden/units.cljc","^8",20,"^9",1,"^:",20,"^;",18,"^5",["^ ","^7","garden/units.cljc","^8",20,"^9",6,"^:",20,"^;",18],"^3>","^6;"],"~$Hz+",["^ ","^R","~$garden.units/Hz+","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",330,"^9",1,"^3>","^3?"],"~$pc?",["^ ","^R","~$garden.units/pc?","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",299,"^9",1,"^3>","^3?"],"~$pt-div",["^ ","^R","~$garden.units/pt-div","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",298,"^9",1,"^3>","^3?"],"~$grad*",["^ ","^R","~$garden.units/grad*","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",319,"^9",1,"^3>","^3?"],"~$s+",["^ ","^R","~$garden.units/s+","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",325,"^9",1,"^3>","^3?"],"~$vh*",["^ ","^R","~$garden.units/vh*","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",312,"^9",1,"^3>","^3?"],"~$s?",["^ ","^R","~$garden.units/s?","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",325,"^9",1,"^3>","^3?"],"~$turn-div",["^ ","^R","~$garden.units/turn-div","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",321,"^9",1,"^3>","^3?"],"~$vh-",["^ ","^R","~$garden.units/vh-","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",312,"^9",1,"^3>","^3?"],"~$ex+",["^ ","^R","~$garden.units/ex+","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",305,"^9",1,"^3>","^3?"],"~$em+",["^ ","^R","~$garden.units/em+","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",304,"^9",1,"^3>","^3?"],"~$vmax-",["^ ","^R","~$garden.units/vmax-","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",314,"^9",1,"^3>","^3?"],"~$frequency?",["^ ","^3A",null,"^5",["^ ","^7","garden/units.cljc","^8",57,"^9",7,"^:",57,"^;",17,"^N",["^O",["^3B",["^O",[["~$x"]]]]]],"^R","~$garden.units/frequency?","^7","garden/units.cljc","^;",17,"^3D",["^O",[["~$x"]]],"^3E",null,"^3F",["^O",[null,null]],"^9",1,"^3G",false,"^8",57,"^3H","^44","^:",57,"^3I",1,"^3J",true,"^N",["^O",["^3B",["^O",[["~$x"]]]]]],"~$vmin+",["^ ","^R","~$garden.units/vmin+","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",313,"^9",1,"^3>","^3?"],"~$deg+",["^ ","^R","~$garden.units/deg+","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",318,"^9",1,"^3>","^3?"],"~$grad+",["^ ","^R","~$garden.units/grad+","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",319,"^9",1,"^3>","^3?"],"~$dpi*",["^ ","^R","~$garden.units/dpi*","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",335,"^9",1,"^3>","^3?"],"~$pt-",["^ ","^R","~$garden.units/pt-","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",298,"^9",1,"^3>","^3?"],"~$deg*",["^ ","^R","~$garden.units/deg*","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",318,"^9",1,"^3>","^3?"],"~$vmax*",["^ ","^R","~$garden.units/vmax*","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",314,"^9",1,"^3>","^3?"],"~$grad-",["^ ","^R","~$garden.units/grad-","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",319,"^9",1,"^3>","^3?"],"~$vmin?",["^ ","^R","~$garden.units/vmin?","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",313,"^9",1,"^3>","^3?"],"~$Hz*",["^ ","^R","~$garden.units/Hz*","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",330,"^9",1,"^3>","^3?"],"~$vw+",["^ ","^R","~$garden.units/vw+","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",311,"^9",1,"^3>","^3?"],"~$vw?",["^ ","^R","~$garden.units/vw?","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",311,"^9",1,"^3>","^3?"],"~$pt+",["^ ","^R","~$garden.units/pt+","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",298,"^9",1,"^3>","^3?"],"~$in?",["^ ","^R","~$garden.units/in?","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",296,"^9",1,"^3>","^3?"],"~$dpcm-div",["^ ","^R","~$garden.units/dpcm-div","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",336,"^9",1,"^3>","^3?"],"~$ex*",["^ ","^R","~$garden.units/ex*","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",305,"^9",1,"^3>","^3?"],"~$Hz?",["^ ","^R","~$garden.units/Hz?","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",330,"^9",1,"^3>","^3?"],"~$px+",["^ ","^R","~$garden.units/px+","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",297,"^9",1,"^3>","^3?"],"~$s-div",["^ ","^R","~$garden.units/s-div","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",325,"^9",1,"^3>","^3?"],"^L",["^ ","^R","~$garden.units/rem","^7","garden/units.cljc","^8",307,"^9",1,"^:",307,"^;",13,"^5",["^ ","^7","garden/units.cljc","^8",307,"^9",10,"^:",307,"^;",13],"^3>","^3?"],"~$em",["^ ","^R","~$garden.units/em","^7","garden/units.cljc","^8",304,"^9",1,"^:",304,"^;",12,"^5",["^ ","^7","garden/units.cljc","^8",304,"^9",10,"^:",304,"^;",12],"^3>","^3?"],"~$em-div",["^ ","^R","~$garden.units/em-div","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",304,"^9",1,"^3>","^3?"],"~$make-unit-fn",["^ ","^3A",null,"^5",["^ ","^7","garden/units.cljc","^8",170,"^9",7,"^:",170,"^;",19,"^N",["^O",["^3B",["^O",[["^Q"]]]]],"^6","Creates a function for creating and converting `CSSUnit`s for the\n  given unit. If a number n is passed the function it will produce a\n  new `CSSUnit` record with a the magnitude set to n. If a `CSSUnit`\n  is passed the function will attempt to convert it."],"^R","~$garden.units/make-unit-fn","^7","garden/units.cljc","^;",19,"^3D",["^O",[["^Q"]]],"^3E",null,"^3F",["^O",[null,null]],"^9",1,"^3G",false,"^8",170,"^3H","^3?","^:",170,"^3I",1,"^3J",true,"^N",["^O",["^3B",["^O",[["^Q"]]]]],"^6","Creates a function for creating and converting `CSSUnit`s for the\n  given unit. If a number n is passed the function it will produce a\n  new `CSSUnit` record with a the magnitude set to n. If a `CSSUnit`\n  is passed the function will attempt to convert it."],"~$dppx",["^ ","^R","~$garden.units/dppx","^7","garden/units.cljc","^8",337,"^9",1,"^:",337,"^;",14,"^5",["^ ","^7","garden/units.cljc","^8",337,"^9",10,"^:",337,"^;",14],"^3>","^3?"],"~$px",["^ ","^R","~$garden.units/px","^7","garden/units.cljc","^8",297,"^9",1,"^:",297,"^;",12,"^5",["^ ","^7","garden/units.cljc","^8",297,"^9",10,"^:",297,"^;",12],"^3>","^3?"],"~$px?",["^ ","^R","~$garden.units/px?","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",297,"^9",1,"^3>","^3?"],"~$vmax-div",["^ ","^R","~$garden.units/vmax-div","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",314,"^9",1,"^3>","^3?"],"~$rem?",["^ ","^R","~$garden.units/rem?","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",307,"^9",1,"^3>","^3?"],"~$vmin-div",["^ ","^R","~$garden.units/vmin-div","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",313,"^9",1,"^3>","^3?"],"~$Hz",["^ ","^R","~$garden.units/Hz","^7","garden/units.cljc","^8",330,"^9",1,"^:",330,"^;",12,"^5",["^ ","^7","garden/units.cljc","^8",330,"^9",10,"^:",330,"^;",12],"^3>","^3?"],"~$in*",["^ ","^R","~$garden.units/in*","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",296,"^9",1,"^3>","^3?"],"~$dpcm",["^ ","^R","~$garden.units/dpcm","^7","garden/units.cljc","^8",336,"^9",1,"^:",336,"^;",14,"^5",["^ ","^7","garden/units.cljc","^8",336,"^9",10,"^:",336,"^;",14],"^3>","^3?"],"~$dppx+",["^ ","^R","~$garden.units/dppx+","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",337,"^9",1,"^3>","^3?"],"~$ms?",["^ ","^R","~$garden.units/ms?","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",326,"^9",1,"^3>","^3?"],"~$pc",["^ ","^R","~$garden.units/pc","^7","garden/units.cljc","^8",299,"^9",1,"^:",299,"^;",12,"^5",["^ ","^7","garden/units.cljc","^8",299,"^9",10,"^:",299,"^;",12],"^3>","^3?"],"~$pt?",["^ ","^R","~$garden.units/pt?","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",298,"^9",1,"^3>","^3?"],"~$dppx-div",["^ ","^R","~$garden.units/dppx-div","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",337,"^9",1,"^3>","^3?"],"~$kHz*",["^ ","^R","~$garden.units/kHz*","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",331,"^9",1,"^3>","^3?"],"~$dpi-",["^ ","^R","~$garden.units/dpi-","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",335,"^9",1,"^3>","^3?"],"~$px-div",["^ ","^R","~$garden.units/px-div","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",297,"^9",1,"^3>","^3?"],"~$mm*",["^ ","^R","~$garden.units/mm*","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",295,"^9",1,"^3>","^3?"],"~$in-",["^ ","^R","~$garden.units/in-","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",296,"^9",1,"^3>","^3?"],"~$pc-div",["^ ","^R","~$garden.units/pc-div","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",299,"^9",1,"^3>","^3?"],"~$s",["^ ","^R","~$garden.units/s","^7","garden/units.cljc","^8",325,"^9",1,"^:",325,"^;",11,"^5",["^ ","^7","garden/units.cljc","^8",325,"^9",10,"^:",325,"^;",11],"^3>","^3?"],"~$vh",["^ ","^R","~$garden.units/vh","^7","garden/units.cljc","^8",312,"^9",1,"^:",312,"^;",12,"^5",["^ ","^7","garden/units.cljc","^8",312,"^9",10,"^:",312,"^;",12],"^3>","^3?"],"~$pc*",["^ ","^R","~$garden.units/pc*","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",299,"^9",1,"^3>","^3?"],"~$pc+",["^ ","^R","~$garden.units/pc+","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",299,"^9",1,"^3>","^3?"],"~$ms+",["^ ","^R","~$garden.units/ms+","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",326,"^9",1,"^3>","^3?"],"~$kHz+",["^ ","^R","~$garden.units/kHz+","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",331,"^9",1,"^3>","^3?"],"~$vw",["^ ","^R","~$garden.units/vw","^7","garden/units.cljc","^8",311,"^9",1,"^:",311,"^;",12,"^5",["^ ","^7","garden/units.cljc","^8",311,"^9",10,"^:",311,"^;",12],"^3>","^3?"],"~$deg",["^ ","^R","~$garden.units/deg","^7","garden/units.cljc","^8",318,"^9",1,"^:",318,"^;",13,"^5",["^ ","^7","garden/units.cljc","^8",318,"^9",10,"^:",318,"^;",13],"^3>","^3?"],"~$vw*",["^ ","^R","~$garden.units/vw*","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",311,"^9",1,"^3>","^3?"],"~$kHz-",["^ ","^R","~$garden.units/kHz-","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",331,"^9",1,"^3>","^3?"],"~$ch",["^ ","^R","~$garden.units/ch","^7","garden/units.cljc","^8",306,"^9",1,"^:",306,"^;",12,"^5",["^ ","^7","garden/units.cljc","^8",306,"^9",10,"^:",306,"^;",12],"^3>","^3?"],"~$angular-units",["^ ","^R","~$garden.units/angular-units","^7","garden/units.cljc","^8",23,"^9",1,"^:",23,"^;",19,"^5",["^ ","^7","garden/units.cljc","^8",23,"^9",6,"^:",23,"^;",19],"^3>","^6;"],"~$dpcm-",["^ ","^R","~$garden.units/dpcm-","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",336,"^9",1,"^3>","^3?"],"~$turn",["^ ","^R","~$garden.units/turn","^7","garden/units.cljc","^8",321,"^9",1,"^:",321,"^;",14,"^5",["^ ","^7","garden/units.cljc","^8",321,"^9",10,"^:",321,"^;",14],"^3>","^3?"],"~$turn-",["^ ","^R","~$garden.units/turn-","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",321,"^9",1,"^3>","^3?"],"~$Hz-div",["^ ","^R","~$garden.units/Hz-div","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",330,"^9",1,"^3>","^3?"],"~$in+",["^ ","^R","~$garden.units/in+","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",296,"^9",1,"^3>","^3?"],"~$dpi",["^ ","^R","~$garden.units/dpi","^7","garden/units.cljc","^8",335,"^9",1,"^:",335,"^;",13,"^5",["^ ","^7","garden/units.cljc","^8",335,"^9",10,"^:",335,"^;",13],"^3>","^3?"],"~$cm",["^ ","^R","~$garden.units/cm","^7","garden/units.cljc","^8",294,"^9",1,"^:",294,"^;",12,"^5",["^ ","^7","garden/units.cljc","^8",294,"^9",10,"^:",294,"^;",12],"^3>","^3?"],"~$cm*",["^ ","^R","~$garden.units/cm*","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",294,"^9",1,"^3>","^3?"],"~$angle?",["^ ","^3A",null,"^5",["^ ","^7","garden/units.cljc","^8",47,"^9",7,"^:",47,"^;",13,"^N",["^O",["^3B",["^O",[["~$x"]]]]]],"^R","~$garden.units/angle?","^7","garden/units.cljc","^;",13,"^3D",["^O",[["~$x"]]],"^3E",null,"^3F",["^O",[null,null]],"^9",1,"^3G",false,"^8",47,"^3H","^44","^:",47,"^3I",1,"^3J",true,"^N",["^O",["^3B",["^O",[["~$x"]]]]]],"~$ex?",["^ ","^R","~$garden.units/ex?","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",305,"^9",1,"^3>","^3?"],"~$grad-div",["^ ","^R","~$garden.units/grad-div","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",319,"^9",1,"^3>","^3?"],"~$rem-",["^ ","^R","~$garden.units/rem-","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",307,"^9",1,"^3>","^3?"],"~$deg?",["^ ","^R","~$garden.units/deg?","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",318,"^9",1,"^3>","^3?"],"~$ms-div",["^ ","^R","~$garden.units/ms-div","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",326,"^9",1,"^3>","^3?"],"~$s-",["^ ","^R","~$garden.units/s-","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",325,"^9",1,"^3>","^3?"],"~$resolution-units",["^ ","^R","~$garden.units/resolution-units","^7","garden/units.cljc","^8",32,"^9",1,"^:",32,"^;",22,"^5",["^ ","^7","garden/units.cljc","^8",32,"^9",6,"^:",32,"^;",22],"^3>","^6;"],"~$cm+",["^ ","^R","~$garden.units/cm+","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",294,"^9",1,"^3>","^3?"],"~$ex",["^ ","^R","~$garden.units/ex","^7","garden/units.cljc","^8",305,"^9",1,"^:",305,"^;",12,"^5",["^ ","^7","garden/units.cljc","^8",305,"^9",10,"^:",305,"^;",12],"^3>","^3?"],"~$dpcm?",["^ ","^R","~$garden.units/dpcm?","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",336,"^9",1,"^3>","^3?"],"~$rem*",["^ ","^R","~$garden.units/rem*","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",307,"^9",1,"^3>","^3?"],"~$ch?",["^ ","^R","~$garden.units/ch?","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",306,"^9",1,"^3>","^3?"],"~$kHz?",["^ ","^R","~$garden.units/kHz?","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",331,"^9",1,"^3>","^3?"],"~$rem-div",["^ ","^R","~$garden.units/rem-div","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",307,"^9",1,"^3>","^3?"],"~$conversions",["^ ","^5",["^ ","^7","garden/units.cljc","^8",71,"^9",3,"^:",71,"^;",14,"^42",true,"^6","Map associating CSS unit types to their conversion values."],"^42",true,"^R","~$garden.units/conversions","^7","garden/units.cljc","^;",14,"^9",1,"^8",69,"^:",71,"^3>","~$cljs.core/IMap","^6","Map associating CSS unit types to their conversion values."],"~$dppx?",["^ ","^R","~$garden.units/dppx?","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",337,"^9",1,"^3>","^3?"],"~$percent-div",["^ ","^R","~$garden.units/percent-div","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",300,"^9",1,"^3>","^3?"],"~$deg-",["^ ","^R","~$garden.units/deg-","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",318,"^9",1,"^3>","^3?"],"~$rad?",["^ ","^R","~$garden.units/rad?","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",320,"^9",1,"^3>","^3?"],"~$percent-",["^ ","^R","~$garden.units/percent-","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",300,"^9",1,"^3>","^3?"],"~$turn*",["^ ","^R","~$garden.units/turn*","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",321,"^9",1,"^3>","^3?"],"~$time-units",["^ ","^R","~$garden.units/time-units","^7","garden/units.cljc","^8",26,"^9",1,"^:",26,"^;",16,"^5",["^ ","^7","garden/units.cljc","^8",26,"^9",6,"^:",26,"^;",16],"^3>","^6;"],"~$make-unit-predicate",["^ ","^3A",null,"^5",["^ ","^7","garden/units.cljc","^8",165,"^9",7,"^:",165,"^;",26,"^N",["^O",["^3B",["^O",[["^Q"]]]]],"^6","Creates a function for verifying the given unit type."],"^R","~$garden.units/make-unit-predicate","^7","garden/units.cljc","^;",26,"^3D",["^O",[["^Q"]]],"^3E",null,"^3F",["^O",[null,null]],"^9",1,"^3G",false,"^8",165,"^3H","^3?","^:",165,"^3I",1,"^3J",true,"^N",["^O",["^3B",["^O",[["^Q"]]]]],"^6","Creates a function for verifying the given unit type."],"~$in-div",["^ ","^R","~$garden.units/in-div","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",296,"^9",1,"^3>","^3?"],"~$ex-div",["^ ","^R","~$garden.units/ex-div","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",305,"^9",1,"^3>","^3?"],"~$turn?",["^ ","^R","~$garden.units/turn?","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",321,"^9",1,"^3>","^3?"],"~$unit-re",["^ ","^5",["^ ","^7","garden/units.cljc","^8",154,"^9",3,"^:",154,"^;",10,"^6","Regular expression for matching a CSS unit. The magnitude\n             and unit are captured.","^42",true],"^42",true,"^R","~$garden.units/unit-re","^7","garden/units.cljc","^;",10,"^9",1,"^8",151,"^:",154,"^3>","~$any","^6","Regular expression for matching a CSS unit. The magnitude\n             and unit are captured."],"~$vh-div",["^ ","^R","~$garden.units/vh-div","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",312,"^9",1,"^3>","^3?"],"~$percent?",["^ ","^R","~$garden.units/percent?","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",300,"^9",1,"^3>","^3?"],"~$rad+",["^ ","^R","~$garden.units/rad+","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",320,"^9",1,"^3>","^3?"],"~$vmax",["^ ","^R","~$garden.units/vmax","^7","garden/units.cljc","^8",314,"^9",1,"^:",314,"^;",14,"^5",["^ ","^7","garden/units.cljc","^8",314,"^9",10,"^:",314,"^;",14],"^3>","^3?"],"~$em-",["^ ","^R","~$garden.units/em-","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",304,"^9",1,"^3>","^3?"],"~$ex-",["^ ","^R","~$garden.units/ex-","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",305,"^9",1,"^3>","^3?"]],"^16",["^ ","^I","^I","^12","^12","^Y","^Y"],"~:cljs.analyzer/constants",["^ ","^14",["^K",["~:mm","~:vmin","~:kHz","~:given","~:pt","~:else","^5X","~:%","~:px","~:rem","~:em","~:dppx","~:dpcm","~:type","~:Hz","~:pc","^5V","~:vh","~:s","~:ch","~:vw","~:deg","~:dpi","~:cm","~:turn","~:ex","~:vmax","~:ms","~:rad","~:grad","~:in"]],"~:order",["^;V","^;Z","^<0","^<7","^<=","^<D","^<;","^<>","^<B","^<C","~:s","^<A","^;X","^<6","^<3","^<4","^<<","^5X","^<1","^<2","^5V","^;[","^;Y","^<5","~:%","^<?","^<9","^<:","^<8","^;W","^<@"]],"^1@",["^ ","^15",["^K",[]],"^16",["^K",[]]],"^1A",["^ "],"^1B",["^13","^12","^Y","^Z","^10"]],"^T","^I","~:ns-specs",["^ "],"~:ns-spec-vars",[],"~:compiler-options",["^1P",[["^<H","~:static-fns"],true,["^<H","~:elide-asserts"],false,["^<H","~:optimize-constants"],null,["^<H","^1G"],null,["^<H","~:external-config"],null,["^<H","~:tooling-config"],null,["^<H","~:emit-constants"],null,["^<H","~:load-tests"],null,["^<H","~:form-size-threshold"],null,["^<H","~:infer-externs"],true,["^<H","^1I"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^<H","~:fn-invoke-direct"],null,["^<H","~:source-map"],"/dev/null"]]]