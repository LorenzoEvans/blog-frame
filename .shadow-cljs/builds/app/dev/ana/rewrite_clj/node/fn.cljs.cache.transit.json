["^ ","~:output",["^ ","~:js","goog.provide('rewrite_clj.node.fn');\ngoog.require('cljs.core');\ngoog.require('rewrite_clj.node.protocols');\ngoog.require('clojure.walk');\n/**\n * Construct function form.\n */\nrewrite_clj.node.fn.construct_fn = (function rewrite_clj$node$fn$construct_fn(syms,vararg,body){\nreturn (new cljs.core.List(null,new cljs.core.Symbol(null,\"fn*\",\"fn*\",-752876845,null),(new cljs.core.List(null,cljs.core.vec(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(syms,(cljs.core.truth_(vararg)?(new cljs.core.List(null,new cljs.core.Symbol(null,\"&\",\"&\",-2144855648,null),(new cljs.core.List(null,vararg,null,(1),null)),(2),null)):null))),(new cljs.core.List(null,body,null,(1),null)),(2),null)),(3),null));\n});\n/**\n * Get index based on the substring following the parameter's `%`.\n * Zero means vararg.\n */\nrewrite_clj.node.fn.sym_index = (function rewrite_clj$node$fn$sym_index(n){\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(n,\"&\")){\nreturn (0);\n} else {\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(n,\"\")){\nreturn (1);\n} else {\nif(cljs.core.truth_(cljs.core.re_matches(/\\d+/,n))){\nreturn parseInt(n);\n} else {\nthrow (new Error(\"arg literal must be %, %& or %integer.\"));\n\n}\n}\n}\n});\n/**\n * If symbol starting with `%`, convert to respective gensym.\n */\nrewrite_clj.node.fn.symbol__GT_gensym = (function rewrite_clj$node$fn$symbol__GT_gensym(sym_seq,vararg_QMARK_,max_n,sym){\nif((sym instanceof cljs.core.Symbol)){\nvar nm = cljs.core.name(sym);\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(nm.indexOf(\"%\"),(0))){\nvar i = rewrite_clj.node.fn.sym_index(cljs.core.subs.cljs$core$IFn$_invoke$arity$2(nm,(1)));\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(max_n,cljs.core.max,i);\n\nreturn cljs.core.nth.cljs$core$IFn$_invoke$arity$2(sym_seq,i);\n} else {\nreturn null;\n}\n} else {\nreturn null;\n}\n});\n/**\n * Walk the form and create an expand function form.\n */\nrewrite_clj.node.fn.fn_walk = (function rewrite_clj$node$fn$fn_walk(form){\nvar syms = (function (){var iter__4523__auto__ = (function rewrite_clj$node$fn$fn_walk_$_iter__41825(s__41826){\nreturn (new cljs.core.LazySeq(null,(function (){\nvar s__41826__$1 = s__41826;\nwhile(true){\nvar temp__5735__auto__ = cljs.core.seq(s__41826__$1);\nif(temp__5735__auto__){\nvar s__41826__$2 = temp__5735__auto__;\nif(cljs.core.chunked_seq_QMARK_(s__41826__$2)){\nvar c__4521__auto__ = cljs.core.chunk_first(s__41826__$2);\nvar size__4522__auto__ = cljs.core.count(c__4521__auto__);\nvar b__41828 = cljs.core.chunk_buffer(size__4522__auto__);\nif((function (){var i__41827 = (0);\nwhile(true){\nif((i__41827 < size__4522__auto__)){\nvar i = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__4521__auto__,i__41827);\nvar base = ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(i,(0)))?\"rest__\":[\"p\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(i),\"__\"].join(''));\nvar s = cljs.core.name(cljs.core.gensym.cljs$core$IFn$_invoke$arity$1(base));\ncljs.core.chunk_append(b__41828,cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([s,\"#\"].join('')));\n\nvar G__41876 = (i__41827 + (1));\ni__41827 = G__41876;\ncontinue;\n} else {\nreturn true;\n}\nbreak;\n}\n})()){\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__41828),rewrite_clj$node$fn$fn_walk_$_iter__41825(cljs.core.chunk_rest(s__41826__$2)));\n} else {\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__41828),null);\n}\n} else {\nvar i = cljs.core.first(s__41826__$2);\nvar base = ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(i,(0)))?\"rest__\":[\"p\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(i),\"__\"].join(''));\nvar s = cljs.core.name(cljs.core.gensym.cljs$core$IFn$_invoke$arity$1(base));\nreturn cljs.core.cons(cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([s,\"#\"].join('')),rewrite_clj$node$fn$fn_walk_$_iter__41825(cljs.core.rest(s__41826__$2)));\n}\n} else {\nreturn null;\n}\nbreak;\n}\n}),null,null));\n});\nreturn iter__4523__auto__(cljs.core.range.cljs$core$IFn$_invoke$arity$0());\n})();\nvar vararg_QMARK_ = false;\nvar max_n = cljs.core.atom.cljs$core$IFn$_invoke$arity$1((0));\nvar body = clojure.walk.prewalk(((function (syms,vararg_QMARK_,max_n){\nreturn (function (p1__41824_SHARP_){\nvar or__4131__auto__ = rewrite_clj.node.fn.symbol__GT_gensym(syms,vararg_QMARK_,max_n,p1__41824_SHARP_);\nif(cljs.core.truth_(or__4131__auto__)){\nreturn or__4131__auto__;\n} else {\nreturn p1__41824_SHARP_;\n}\n});})(syms,vararg_QMARK_,max_n))\n,form);\nreturn rewrite_clj.node.fn.construct_fn(cljs.core.take.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(max_n),cljs.core.rest(syms)),null,body);\n});\n\n/**\n* @constructor\n * @implements {cljs.core.IRecord}\n * @implements {cljs.core.IKVReduce}\n * @implements {cljs.core.IEquiv}\n * @implements {cljs.core.IHash}\n * @implements {cljs.core.ICollection}\n * @implements {cljs.core.ICounted}\n * @implements {rewrite_clj.node.protocols.InnerNode}\n * @implements {cljs.core.ISeqable}\n * @implements {cljs.core.IMeta}\n * @implements {cljs.core.ICloneable}\n * @implements {cljs.core.IPrintWithWriter}\n * @implements {cljs.core.IIterable}\n * @implements {rewrite_clj.node.protocols.Node}\n * @implements {cljs.core.IWithMeta}\n * @implements {cljs.core.IAssociative}\n * @implements {cljs.core.IMap}\n * @implements {cljs.core.ILookup}\n*/\nrewrite_clj.node.fn.FnNode = (function (children,__meta,__extmap,__hash){\nthis.children = children;\nthis.__meta = __meta;\nthis.__extmap = __extmap;\nthis.__hash = __hash;\nthis.cljs$lang$protocol_mask$partition0$ = 2230716170;\nthis.cljs$lang$protocol_mask$partition1$ = 139264;\n});\nrewrite_clj.node.fn.FnNode.prototype.toString = (function (){\nvar self__ = this;\nvar this$ = this;\nreturn this$.rewrite_clj$node$protocols$Node$string$arity$1(null);\n});\n\nrewrite_clj.node.fn.FnNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (this__4385__auto__,k__4386__auto__){\nvar self__ = this;\nvar this__4385__auto____$1 = this;\nreturn this__4385__auto____$1.cljs$core$ILookup$_lookup$arity$3(null,k__4386__auto__,null);\n});\n\nrewrite_clj.node.fn.FnNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (this__4387__auto__,k41830,else__4388__auto__){\nvar self__ = this;\nvar this__4387__auto____$1 = this;\nvar G__41836 = k41830;\nvar G__41836__$1 = (((G__41836 instanceof cljs.core.Keyword))?G__41836.fqn:null);\nswitch (G__41836__$1) {\ncase \"children\":\nreturn self__.children;\n\nbreak;\ndefault:\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$3(self__.__extmap,k41830,else__4388__auto__);\n\n}\n});\n\nrewrite_clj.node.fn.FnNode.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (this__4404__auto__,f__4405__auto__,init__4406__auto__){\nvar self__ = this;\nvar this__4404__auto____$1 = this;\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (this__4404__auto____$1){\nreturn (function (ret__4407__auto__,p__41837){\nvar vec__41838 = p__41837;\nvar k__4408__auto__ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__41838,(0),null);\nvar v__4409__auto__ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__41838,(1),null);\nreturn (f__4405__auto__.cljs$core$IFn$_invoke$arity$3 ? f__4405__auto__.cljs$core$IFn$_invoke$arity$3(ret__4407__auto__,k__4408__auto__,v__4409__auto__) : f__4405__auto__.call(null,ret__4407__auto__,k__4408__auto__,v__4409__auto__));\n});})(this__4404__auto____$1))\n,init__4406__auto__,this__4404__auto____$1);\n});\n\nrewrite_clj.node.fn.FnNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (this__4399__auto__,writer__4400__auto__,opts__4401__auto__){\nvar self__ = this;\nvar this__4399__auto____$1 = this;\nvar pr_pair__4402__auto__ = ((function (this__4399__auto____$1){\nreturn (function (keyval__4403__auto__){\nreturn cljs.core.pr_sequential_writer(writer__4400__auto__,cljs.core.pr_writer,\"\",\" \",\"\",opts__4401__auto__,keyval__4403__auto__);\n});})(this__4399__auto____$1))\n;\nreturn cljs.core.pr_sequential_writer(writer__4400__auto__,pr_pair__4402__auto__,\"#rewrite-clj.node.fn.FnNode{\",\", \",\"}\",opts__4401__auto__,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"children\",\"children\",-940561982),self__.children],null))], null),self__.__extmap));\n});\n\nrewrite_clj.node.fn.FnNode.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (G__41829){\nvar self__ = this;\nvar G__41829__$1 = this;\nreturn (new cljs.core.RecordIter((0),G__41829__$1,1,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"children\",\"children\",-940561982)], null),(cljs.core.truth_(self__.__extmap)?cljs.core._iterator(self__.__extmap):cljs.core.nil_iter())));\n});\n\nrewrite_clj.node.fn.FnNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (this__4383__auto__){\nvar self__ = this;\nvar this__4383__auto____$1 = this;\nreturn self__.__meta;\n});\n\nrewrite_clj.node.fn.FnNode.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (this__4380__auto__){\nvar self__ = this;\nvar this__4380__auto____$1 = this;\nreturn (new rewrite_clj.node.fn.FnNode(self__.children,self__.__meta,self__.__extmap,self__.__hash));\n});\n\nrewrite_clj.node.fn.FnNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (this__4389__auto__){\nvar self__ = this;\nvar this__4389__auto____$1 = this;\nreturn (1 + cljs.core.count(self__.__extmap));\n});\n\nrewrite_clj.node.fn.FnNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (this__4381__auto__){\nvar self__ = this;\nvar this__4381__auto____$1 = this;\nvar h__4243__auto__ = self__.__hash;\nif((!((h__4243__auto__ == null)))){\nreturn h__4243__auto__;\n} else {\nvar h__4243__auto____$1 = (function (){var fexpr__41853 = ((function (h__4243__auto__,this__4381__auto____$1){\nreturn (function (coll__4382__auto__){\nreturn (-1740346885 ^ cljs.core.hash_unordered_coll(coll__4382__auto__));\n});})(h__4243__auto__,this__4381__auto____$1))\n;\nreturn fexpr__41853(this__4381__auto____$1);\n})();\nself__.__hash = h__4243__auto____$1;\n\nreturn h__4243__auto____$1;\n}\n});\n\nrewrite_clj.node.fn.FnNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this41831,other41832){\nvar self__ = this;\nvar this41831__$1 = this;\nreturn (((!((other41832 == null)))) && ((this41831__$1.constructor === other41832.constructor)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this41831__$1.children,other41832.children)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this41831__$1.__extmap,other41832.__extmap)));\n});\n\nrewrite_clj.node.fn.FnNode.prototype.rewrite_clj$node$protocols$Node$ = cljs.core.PROTOCOL_SENTINEL;\n\nrewrite_clj.node.fn.FnNode.prototype.rewrite_clj$node$protocols$Node$tag$arity$1 = (function (_){\nvar self__ = this;\nvar ___$1 = this;\nreturn new cljs.core.Keyword(null,\"fn\",\"fn\",-1175266204);\n});\n\nrewrite_clj.node.fn.FnNode.prototype.rewrite_clj$node$protocols$Node$printable_only_QMARK_$arity$1 = (function (_){\nvar self__ = this;\nvar ___$1 = this;\nreturn false;\n});\n\nrewrite_clj.node.fn.FnNode.prototype.rewrite_clj$node$protocols$Node$sexpr$arity$1 = (function (_){\nvar self__ = this;\nvar ___$1 = this;\nreturn rewrite_clj.node.fn.fn_walk(rewrite_clj.node.protocols.sexprs(self__.children));\n});\n\nrewrite_clj.node.fn.FnNode.prototype.rewrite_clj$node$protocols$Node$length$arity$1 = (function (_){\nvar self__ = this;\nvar ___$1 = this;\nreturn ((3) + rewrite_clj.node.protocols.sum_lengths(self__.children));\n});\n\nrewrite_clj.node.fn.FnNode.prototype.rewrite_clj$node$protocols$Node$string$arity$1 = (function (_){\nvar self__ = this;\nvar ___$1 = this;\nreturn [\"#(\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(rewrite_clj.node.protocols.concat_strings(self__.children)),\")\"].join('');\n});\n\nrewrite_clj.node.fn.FnNode.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (this__4394__auto__,k__4395__auto__){\nvar self__ = this;\nvar this__4394__auto____$1 = this;\nif(cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"children\",\"children\",-940561982),null], null), null),k__4395__auto__)){\nreturn cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(cljs.core._with_meta(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,this__4394__auto____$1),self__.__meta),k__4395__auto__);\n} else {\nreturn (new rewrite_clj.node.fn.FnNode(self__.children,self__.__meta,cljs.core.not_empty(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.__extmap,k__4395__auto__)),null));\n}\n});\n\nrewrite_clj.node.fn.FnNode.prototype.rewrite_clj$node$protocols$InnerNode$ = cljs.core.PROTOCOL_SENTINEL;\n\nrewrite_clj.node.fn.FnNode.prototype.rewrite_clj$node$protocols$InnerNode$inner_QMARK_$arity$1 = (function (_){\nvar self__ = this;\nvar ___$1 = this;\nreturn true;\n});\n\nrewrite_clj.node.fn.FnNode.prototype.rewrite_clj$node$protocols$InnerNode$children$arity$1 = (function (_){\nvar self__ = this;\nvar ___$1 = this;\nreturn self__.children;\n});\n\nrewrite_clj.node.fn.FnNode.prototype.rewrite_clj$node$protocols$InnerNode$replace_children$arity$2 = (function (this$,children_SINGLEQUOTE_){\nvar self__ = this;\nvar this$__$1 = this;\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(this$__$1,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),children_SINGLEQUOTE_);\n});\n\nrewrite_clj.node.fn.FnNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (this__4392__auto__,k__4393__auto__,G__41829){\nvar self__ = this;\nvar this__4392__auto____$1 = this;\nvar pred__41861 = cljs.core.keyword_identical_QMARK_;\nvar expr__41862 = k__4393__auto__;\nif(cljs.core.truth_((function (){var G__41864 = new cljs.core.Keyword(null,\"children\",\"children\",-940561982);\nvar G__41865 = expr__41862;\nreturn (pred__41861.cljs$core$IFn$_invoke$arity$2 ? pred__41861.cljs$core$IFn$_invoke$arity$2(G__41864,G__41865) : pred__41861.call(null,G__41864,G__41865));\n})())){\nreturn (new rewrite_clj.node.fn.FnNode(G__41829,self__.__meta,self__.__extmap,null));\n} else {\nreturn (new rewrite_clj.node.fn.FnNode(self__.children,self__.__meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.__extmap,k__4393__auto__,G__41829),null));\n}\n});\n\nrewrite_clj.node.fn.FnNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this__4397__auto__){\nvar self__ = this;\nvar this__4397__auto____$1 = this;\nreturn cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"children\",\"children\",-940561982),self__.children,null))], null),self__.__extmap));\n});\n\nrewrite_clj.node.fn.FnNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this__4384__auto__,G__41829){\nvar self__ = this;\nvar this__4384__auto____$1 = this;\nreturn (new rewrite_clj.node.fn.FnNode(self__.children,G__41829,self__.__extmap,self__.__hash));\n});\n\nrewrite_clj.node.fn.FnNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this__4390__auto__,entry__4391__auto__){\nvar self__ = this;\nvar this__4390__auto____$1 = this;\nif(cljs.core.vector_QMARK_(entry__4391__auto__)){\nreturn this__4390__auto____$1.cljs$core$IAssociative$_assoc$arity$3(null,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry__4391__auto__,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry__4391__auto__,(1)));\n} else {\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,this__4390__auto____$1,entry__4391__auto__);\n}\n});\n\nrewrite_clj.node.fn.FnNode.getBasis = (function (){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"children\",\"children\",699969545,null)], null);\n});\n\nrewrite_clj.node.fn.FnNode.cljs$lang$type = true;\n\nrewrite_clj.node.fn.FnNode.cljs$lang$ctorPrSeq = (function (this__4428__auto__){\nreturn (new cljs.core.List(null,\"rewrite-clj.node.fn/FnNode\",null,(1),null));\n});\n\nrewrite_clj.node.fn.FnNode.cljs$lang$ctorPrWriter = (function (this__4428__auto__,writer__4429__auto__){\nreturn cljs.core._write(writer__4429__auto__,\"rewrite-clj.node.fn/FnNode\");\n});\n\n/**\n * Positional factory function for rewrite-clj.node.fn/FnNode.\n */\nrewrite_clj.node.fn.__GT_FnNode = (function rewrite_clj$node$fn$__GT_FnNode(children){\nreturn (new rewrite_clj.node.fn.FnNode(children,null,null,null));\n});\n\n/**\n * Factory function for rewrite-clj.node.fn/FnNode, taking a map of keywords to field values.\n */\nrewrite_clj.node.fn.map__GT_FnNode = (function rewrite_clj$node$fn$map__GT_FnNode(G__41833){\nvar extmap__4424__auto__ = (function (){var G__41868 = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(G__41833,new cljs.core.Keyword(null,\"children\",\"children\",-940561982));\nif(cljs.core.record_QMARK_(G__41833)){\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,G__41868);\n} else {\nreturn G__41868;\n}\n})();\nreturn (new rewrite_clj.node.fn.FnNode(new cljs.core.Keyword(null,\"children\",\"children\",-940561982).cljs$core$IFn$_invoke$arity$1(G__41833),null,cljs.core.not_empty(extmap__4424__auto__),null));\n});\n\n/**\n * Create node representing an anonymous function.\n */\nrewrite_clj.node.fn.fn_node = (function rewrite_clj$node$fn$fn_node(children){\nreturn rewrite_clj.node.fn.__GT_FnNode(children);\n});\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","rewrite_clj/node/fn.cljs","~:line",1,"~:column",14,"~:end-line",1,"~:end-column",33,"~:no-doc",true],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$react","~$module$node_modules$react$index","~$create-react-class","~$module$node_modules$create_react_class$index","~$react-dom","~$module$node_modules$react_dom$index","~$clojure.spec.alpha","~$cljs.spec.alpha"],"~:use-macros",null,"~:excludes",["~#set",[]],"~:name","~$rewrite-clj.node.fn","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$rewrite-clj.node.protocols","^P","~$node","^P","~$clojure.walk","^R","~$w","^R","~$cljs.core","^S","~$goog","^T"],"~:seen",["^I",["~:require"]],"~:uses",null,"~:require-macros",["^ ","^S","^S"],"~:form",["~#list",["~$ns","^K",["^Z",["^V",["^P","~:as","^Q"],["^R","^10","~$w"]]]]],"~:flags",["^ ","^V",["^I",[]]],"~:js-deps",["^ "],"~:deps",["^T","^S","^P","^R"]],"^M","^K","~:resource-id",["~:shadow.build.classpath/resource","rewrite_clj/node/fn.cljs"],"~:compiled-at",1573425047117,"~:resource-name","rewrite_clj/node/fn.cljs","~:warnings",[],"~:source","(ns ^:no-doc rewrite-clj.node.fn\n  (:require [rewrite-clj.node.protocols :as node]\n            [clojure.walk :as w]))\n\n;; ## Conversion\n\n(defn- construct-fn\n  \"Construct function form.\"\n  [syms vararg body]\n  (list\n    'fn*\n    (vec\n      (concat\n        syms\n        (if vararg\n          (list '& vararg))))\n    body))\n\n(defn- sym-index\n  \"Get index based on the substring following the parameter's `%`.\n   Zero means vararg.\"\n  [n]\n  (cond (= n \"&\") 0\n        (= n \"\") 1\n        (re-matches #\"\\d+\" n) (js/parseInt n)\n        :else (throw (js/Error. \"arg literal must be %, %& or %integer.\"))))\n\n;; TODO: No promises available\n(defn- symbol->gensym\n  \"If symbol starting with `%`, convert to respective gensym.\"\n  [sym-seq vararg? max-n sym]\n  (if (symbol? sym)\n    (let [nm (name sym)]\n      (if (= (.indexOf nm \"%\") 0)\n        (let [i (sym-index (subs nm 1))]\n;;           (if (and (= i 0) (not (realized? vararg?)))\n;;             (deliver vararg? true))\n          (swap! max-n max i)\n          (nth sym-seq i))))))\n\n;; TODO: No promises available\n(defn- fn-walk\n  \"Walk the form and create an expand function form.\"\n  [form]\n  (let [syms (for [i (range)\n                   :let [base (if (= i 0)\n                                \"rest__\"\n                                (str \"p\" i \"__\"))\n                         s (name (gensym base))]]\n               (symbol (str s \"#\")))\n        vararg? false ;(promise)\n        max-n (atom 0)\n        body (w/prewalk\n               #(or (symbol->gensym syms vararg? max-n %) %)\n               form)]\n    (construct-fn\n      (take @max-n (rest syms))\n      nil\n;;       (if (deref vararg? 0 nil)\n;;         (first syms))\n      body)))\n\n;; ## Node\n\n(defrecord FnNode [children]\n  node/Node\n  (tag [_] :fn)\n  (printable-only? [_]\n    false)\n  (sexpr [_]\n    (fn-walk (node/sexprs children)))\n  (length [_]\n    (+ 3 (node/sum-lengths children)))\n  (string [_]\n    (str \"#(\" (node/concat-strings children) \")\"))\n\n  node/InnerNode\n  (inner? [_]\n    true)\n  (children [_]\n    children)\n  (replace-children [this children']\n    (assoc this :children children'))\n\n  Object\n  (toString [this]\n    (node/string this)))\n\n;; TODO\n;(node/make-printable! FnNode)\n\n;; ## Constructor\n\n(defn fn-node\n  \"Create node representing an anonymous function.\"\n  [children]\n  (->FnNode children))\n","~:reader-features",["^I",["~:cljs"]],"~:cljc",false,"~:source-map-compact",["^ ","mappings","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","names",["rewrite-clj.node.fn/construct-fn","syms","vararg","body","cljs.core/List","cljs.core/vec","cljs.core.concat.cljs$core$IFn$_invoke$arity$2","rewrite-clj.node.fn/sym-index","n","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2","cljs.core/re-matches","js/parseInt","js/Error","rewrite-clj.node.fn/symbol->gensym","sym-seq","vararg?","max-n","sym","cljs.core/Symbol","nm","cljs.core/name","i","cljs.core.subs.cljs$core$IFn$_invoke$arity$2","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3","cljs.core/max","cljs.core.nth.cljs$core$IFn$_invoke$arity$2","rewrite-clj.node.fn/fn-walk","form","iter__4523__auto__","s__41826","cljs.core/LazySeq","temp__5735__auto__","cljs.core/seq","cljs.core/chunked-seq?","c__4521__auto__","size__4522__auto__","cljs.core/count","b__41828","cljs.core/chunk-buffer","i__41827","cljs.core._nth.cljs$core$IFn$_invoke$arity$2","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__41825","cljs.core/chunk-rest","cljs.core/first","cljs.core/cons","cljs.core/rest","cljs.core.range.cljs$core$IFn$_invoke$arity$0","base","s","cljs.core.gensym.cljs$core$IFn$_invoke$arity$1","cljs.core.symbol.cljs$core$IFn$_invoke$arity$1","cljs.core.atom.cljs$core$IFn$_invoke$arity$1","p1__41824#","clojure.walk/prewalk","or__4131__auto__","cljs.core/deref","cljs.core.take.cljs$core$IFn$_invoke$arity$2","this__4385__auto__","k__4386__auto__","this__4387__auto__","k41830","else__4388__auto__","G__41836","cljs.core/Keyword","children","cljs.core.get.cljs$core$IFn$_invoke$arity$3","__extmap","this__4404__auto__","f__4405__auto__","init__4406__auto__","cljs.core.reduce.cljs$core$IFn$_invoke$arity$3","ret__4407__auto__","p__41837","vec__41838","k__4408__auto__","cljs.core.nth.cljs$core$IFn$_invoke$arity$3","v__4409__auto__","this__4399__auto__","writer__4400__auto__","opts__4401__auto__","pr-pair__4402__auto__","keyval__4403__auto__","cljs.core/pr-sequential-writer","cljs.core/PersistentVector","G__41829","cljs.core/RecordIter","cljs.core/-iterator","cljs.core/nil-iter","this__4383__auto__","__meta","this__4380__auto__","__hash","this__4389__auto__","this__4381__auto__","h__4243__auto__","fexpr__41853","coll__4382__auto__","cljs.core/hash-unordered-coll","this41831","other41832","cljs.core/PROTOCOL_SENTINEL","this__4394__auto__","k__4395__auto__","cljs.core/contains?","cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2","cljs.core/-with-meta","cljs.core.into.cljs$core$IFn$_invoke$arity$2","cljs.core/not-empty","this__4392__auto__","k__4393__auto__","pred__41861","cljs.core/keyword-identical?","expr__41862","G__41864","G__41865","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3","this__4397__auto__","cljs.core/MapEntry","this__4384__auto__","this__4390__auto__","entry__4391__auto__","cljs.core/vector?","cljs.core/-conj","rewrite-clj.node.fn/FnNode","this__4428__auto__","writer__4429__auto__","cljs.core/-write","G__41833","extmap__4424__auto__","G__41868","cljs.core/record?","rewrite-clj.node.fn/->FnNode","rewrite-clj.node.fn/map->FnNode","_","rewrite-clj.node.protocols/sexprs","rewrite-clj.node.protocols/sum-lengths","rewrite-clj.node.protocols/concat-strings","this","children'","rewrite-clj.node.fn/fn-node","cljs.core/chunk-first"]]],"~:cache-keys",["~#cmap",[["^15","goog/math/math.js"],[1559507890775,"~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^I",[]],"~:deps-syms",["^T","~$goog.array","~$goog.asserts"]]],["^15","goog/array/array.js"],[1559507890775,"^1B",["^ ","^1C",null,"^1D",["^I",[]],"^1E",["^T","^1G"]]],["^15","goog/debug/error.js"],[1559507890775,"^1B",["^ ","^1C",null,"^1D",["^I",[]],"^1E",["^T"]]],["^15","goog/dom/nodetype.js"],[1559507890775,"^1B",["^ ","^1C",null,"^1D",["^I",[]],"^1E",["^T"]]],["^15","goog/object/object.js"],[1559507890775,"^1B",["^ ","^1C",null,"^1D",["^I",[]],"^1E",["^T"]]],"~:SHADOW-TIMESTAMP",[1570928878000,1556316222000],["^15","goog/math/long.js"],[1559507890775,"^1B",["^ ","^1C",null,"^1D",["^I",[]],"^1E",["^T","^1G","~$goog.reflect"]]],["^15","goog/string/internal.js"],[1559507890775,"^1B",["^ ","^1C",null,"^1D",["^I",[]],"^1E",["^T"]]],["^15","goog/functions/functions.js"],[1559507890775,"^1B",["^ ","^1C",null,"^1D",["^I",[]],"^1E",["^T"]]],["^15","clojure/walk.cljs"],[1556316222100,"^1B",["^ ","^1C",null,"^1D",["^I",[]],"^1E",["^T","^S"]]],["^15","goog/structs/map.js"],[1559507890775,"^1B",["^ ","^1C",null,"^1D",["^I",[]],"^1E",["^T","~$goog.iter.Iterator","~$goog.iter.StopIteration"]]],["^15","goog/asserts/asserts.js"],[1559507890775,"^1B",["^ ","^1C",null,"^1D",["^I",[]],"^1E",["^T","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^15","goog/uri/uri.js"],[1559507890775,"^1B",["^ ","^1C",null,"^1D",["^I",[]],"^1E",["^T","^1F","^1G","~$goog.string","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^15","rewrite_clj/node/protocols.cljs"],[1568862518445,"^1B",["^ ","^1C",null,"^1D",["^I",[]],"^1E",["^T","^S","~$clojure.string"]]],["^15","goog/base.js"],[1559507890775,"^1B",["^ ","^1C",null,"^1D",["^I",[]],"^1E",[]]],["^15","goog/structs/structs.js"],[1559507890775,"^1B",["^ ","^1C",null,"^1D",["^I",[]],"^1E",["^T","^1F","~$goog.object"]]],["^15","clojure/string.cljs"],[1556316222100,"^1B",["^ ","^1C",null,"^1D",["^I",[]],"^1E",["^T","^S","^1N","~$goog.string.StringBuffer"]]],["^15","goog/string/string.js"],[1559507890775,"^1B",["^ ","^1C",null,"^1D",["^I",[]],"^1E",["^T","~$goog.string.internal"]]],["^15","goog/reflect/reflect.js"],[1559507890775,"^1B",["^ ","^1C",null,"^1D",["^I",[]],"^1E",["^T"]]],["^15","rewrite_clj/node/fn.cljs"],[1568862518445,"^1B",["^ ","^1C",null,"^1D",["^I",[]],"^1E",["^T","^S","^P","^R"]]],["^15","goog/string/stringbuffer.js"],[1559507890775,"^1B",["^ ","^1C",null,"^1D",["^I",[]],"^1E",["^T"]]],["^15","goog/iter/iter.js"],[1559507890775,"^1B",["^ ","^1C",null,"^1D",["^I",[]],"^1E",["^T","^1F","^1G","~$goog.functions","~$goog.math"]]],["^15","cljs/core.cljs"],[1556316222100,"^1B",["^ ","^1C",null,"^1D",["^I",[]],"^1E",["~$goog.math.Long","~$goog.math.Integer","^1N","^1U","^1F","~$goog.Uri","^1V"]]],["^15","goog/math/integer.js"],[1559507890775,"^1B",["^ ","^1C",null,"^1D",["^I",[]],"^1E",["^T"]]],["^15","goog/uri/utils.js"],[1559507890775,"^1B",["^ ","^1C",null,"^1D",["^I",[]],"^1E",["^T","^1F","^1G","^1N"]]]]],"~:clj-info",["^ ","jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/tools.reader/1.3.0/tools.reader-1.3.0.jar!/clojure/tools/reader/default_data_readers.clj",1556316222000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/edn.clj",1559876774000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/externs.clj",1556316222000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/core.cljc",1556316222000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/string.clj",1559876774000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/pprint.clj",1559876774000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/env.cljc",1556316222000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/tools.reader/1.3.0/tools.reader-1.3.0.jar!/clojure/tools/reader/impl/inspect.clj",1556316222000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/tools.reader/1.3.0/tools.reader-1.3.0.jar!/clojure/tools/reader/reader_types.clj",1556316222000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/source_map/base64_vlq.clj",1556316222000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/source_map.clj",1556316222000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/java/io.clj",1559876774000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/tools.reader/1.3.0/tools.reader-1.3.0.jar!/clojure/tools/reader.clj",1556316222000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/js_deps.cljc",1556316222000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/set.clj",1559876774000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/tools.reader/1.3.0/tools.reader-1.3.0.jar!/clojure/tools/reader/impl/errors.clj",1556316222000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/compiler.cljc",1556316222000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/util.cljc",1556316222000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/source_map/base64.clj",1556316222000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/tagged_literals.cljc",1556316222000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/instant.clj",1559876774000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/core.clj",1559876774000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/data.json/0.2.6/data.json-0.2.6.jar!/clojure/data/json.clj",1556312825000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/analyzer.cljc",1556316222000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","rewrite_clj/node/fn.cljs","^7",1,"^8",14,"^9",1,"^:",33,"^;",true],"^<",["^ ","^=","^>","^?","^@","^A","^B","^C","^D","^E","^F"],"^G",null,"^H",["^I",[]],"^J","^K","^N",null,"^O",["^ ","^P","^P","^Q","^P","^R","^R","~$w","^R","^S","^S","^T","^T"],"^U",["^I",["^V"]],"~:shadow/js-access-global",["^I",["Error","parseInt"]],"^W",null,"~:defs",["^ ","~$construct-fn",["^ ","~:protocol-inline",null,"^5",["^ ","^6","rewrite_clj/node/fn.cljs","^7",7,"^8",8,"^9",7,"^:",20,"~:private",true,"~:arglists",["^Z",["~$quote",["^Z",[["~$syms","~$vararg","~$body"]]]]],"~:doc","Construct function form."],"^2O",true,"^J","~$rewrite-clj.node.fn/construct-fn","^6","rewrite_clj/node/fn.cljs","^:",20,"~:method-params",["^Z",[["^2R","^2S","^2T"]]],"~:protocol-impl",null,"~:arglists-meta",["^Z",[null,null]],"^8",1,"~:variadic?",false,"^7",7,"~:ret-tag","~$cljs.core/List","^9",7,"~:max-fixed-arity",3,"~:fn-var",true,"^2P",["^Z",["^2Q",["^Z",[["^2R","^2S","^2T"]]]]],"^2U","Construct function form."],"~$sym-index",["^ ","^2N",null,"^5",["^ ","^6","rewrite_clj/node/fn.cljs","^7",19,"^8",8,"^9",19,"^:",17,"^2O",true,"^2P",["^Z",["^2Q",["^Z",[["~$n"]]]]],"^2U","Get index based on the substring following the parameter's `%`.\n   Zero means vararg."],"^2O",true,"^J","~$rewrite-clj.node.fn/sym-index","^6","rewrite_clj/node/fn.cljs","^:",17,"^2W",["^Z",[["~$n"]]],"^2X",null,"^2Y",["^Z",[null,null]],"^8",1,"^2Z",false,"^7",19,"^2[",["^I",["~$js","~$number"]],"^9",19,"^31",1,"^32",true,"^2P",["^Z",["^2Q",["^Z",[["~$n"]]]]],"^2U","Get index based on the substring following the parameter's `%`.\n   Zero means vararg."],"~$symbol->gensym",["^ ","^2N",null,"^5",["^ ","^6","rewrite_clj/node/fn.cljs","^7",29,"^8",8,"^9",29,"^:",22,"^2O",true,"^2P",["^Z",["^2Q",["^Z",[["~$sym-seq","~$vararg?","~$max-n","~$sym"]]]]],"^2U","If symbol starting with `%`, convert to respective gensym."],"^2O",true,"^J","~$rewrite-clj.node.fn/symbol->gensym","^6","rewrite_clj/node/fn.cljs","^:",22,"^2W",["^Z",[["^38","^39","^3:","^3;"]]],"^2X",null,"^2Y",["^Z",[null,null]],"^8",1,"^2Z",false,"^7",29,"^2[",["^I",["~$any","~$clj-nil"]],"^9",29,"^31",4,"^32",true,"^2P",["^Z",["^2Q",["^Z",[["^38","^39","^3:","^3;"]]]]],"^2U","If symbol starting with `%`, convert to respective gensym."],"~$fn-walk",["^ ","^2N",null,"^5",["^ ","^6","rewrite_clj/node/fn.cljs","^7",42,"^8",8,"^9",42,"^:",15,"^2O",true,"^2P",["^Z",["^2Q",["^Z",[["~$form"]]]]],"^2U","Walk the form and create an expand function form."],"^2O",true,"^J","~$rewrite-clj.node.fn/fn-walk","^6","rewrite_clj/node/fn.cljs","^:",15,"^2W",["^Z",[["^3@"]]],"^2X",null,"^2Y",["^Z",[null,null]],"^8",1,"^2Z",false,"^7",42,"^2[","^30","^9",42,"^31",1,"^32",true,"^2P",["^Z",["^2Q",["^Z",[["^3@"]]]]],"^2U","Walk the form and create an expand function form."],"~$FnNode",["^ ","~:num-fields",1,"~:protocols",["^I",["~$cljs.core/IRecord","~$cljs.core/IKVReduce","~$cljs.core/IEquiv","~$cljs.core/IHash","~$cljs.core/ICollection","~$cljs.core/Object","~$cljs.core/ICounted","~$rewrite-clj.node.protocols/InnerNode","~$cljs.core/ISeqable","~$cljs.core/IMeta","~$cljs.core/ICloneable","~$cljs.core/IPrintWithWriter","~$cljs.core/IIterable","~$rewrite-clj.node.protocols/Node","~$cljs.core/IWithMeta","~$cljs.core/IAssociative","~$cljs.core/IMap","~$cljs.core/ILookup"]],"^J","~$rewrite-clj.node.fn/FnNode","^6","rewrite_clj/node/fn.cljs","^:",18,"~:type",true,"^8",12,"~:internal-ctor",true,"^7",65,"~:record",true,"^9",65,"~:tag","~$function","~:skip-protocol-flag",["^I",["^3E","^3F","^3G","^3H","^3I","^3K","^3M","^3N","^3O","^3P","^3Q","^3S","^3T","^3U","^3V"]]],"~$->FnNode",["^ ","^2N",null,"^5",["^ ","^6","rewrite_clj/node/fn.cljs","^:",18,"^8",12,"^3Y",true,"~:factory","~:positional","^7",65,"^9",65,"^2P",["^Z",["^2Q",["^Z",[["~$children"]]]]],"^2U","Positional factory function for rewrite-clj.node.fn/FnNode."],"^J","~$rewrite-clj.node.fn/->FnNode","^6","rewrite_clj/node/fn.cljs","^:",18,"^2W",["^Z",[["^45"]]],"^2X",null,"^2Y",["^Z",[null,null]],"^8",1,"^3Y",true,"^2Z",false,"^43","^44","^7",65,"^2[","^3W","^9",65,"^31",1,"^32",true,"^2P",["^Z",["^2Q",["^Z",[["^45"]]]]],"^2U","Positional factory function for rewrite-clj.node.fn/FnNode."],"~$map->FnNode",["^ ","^2N",null,"^5",["^ ","^6","rewrite_clj/node/fn.cljs","^:",18,"^8",12,"^3Y",true,"^43","~:map","^7",65,"^9",65,"^2P",["^Z",["^2Q",["^Z",[["~$G__41833"]]]]],"^2U","Factory function for rewrite-clj.node.fn/FnNode, taking a map of keywords to field values."],"^J","~$rewrite-clj.node.fn/map->FnNode","^6","rewrite_clj/node/fn.cljs","^:",18,"^2W",["^Z",[["^49"]]],"^2X",null,"^2Y",["^Z",[null,null]],"^8",1,"^3Y",true,"^2Z",false,"^43","^48","^7",65,"^2[","^3W","^9",65,"^31",1,"^32",true,"^2P",["^Z",["^2Q",["^Z",[["^49"]]]]],"^2U","Factory function for rewrite-clj.node.fn/FnNode, taking a map of keywords to field values."],"~$fn-node",["^ ","^2N",null,"^5",["^ ","^6","rewrite_clj/node/fn.cljs","^7",94,"^8",7,"^9",94,"^:",14,"^2P",["^Z",["^2Q",["^Z",[["^45"]]]]],"^2U","Create node representing an anonymous function."],"^J","~$rewrite-clj.node.fn/fn-node","^6","rewrite_clj/node/fn.cljs","^:",14,"^2W",["^Z",[["^45"]]],"^2X",null,"^2Y",["^Z",[null,null]],"^8",1,"^2Z",false,"^7",94,"^2[","^3W","^9",94,"^31",1,"^32",true,"^2P",["^Z",["^2Q",["^Z",[["^45"]]]]],"^2U","Create node representing an anonymous function."]],"^X",["^ ","^S","^S"],"~:cljs.analyzer/constants",["^ ","^U",["^I",["~$&","~:children","~:fn","~:else","^45","~$fn*"]],"~:order",["^4A","~$&","^4@","^4>","^4?","^45"]],"^11",["^ ","^V",["^I",[]]],"^12",["^ "],"^13",["^T","^S","^P","^R"]],"^M","^K","~:ns-specs",["^ "],"~:ns-spec-vars",[],"~:compiler-options",["^1A",[["^4E","~:static-fns"],true,["^4E","~:elide-asserts"],false,["^4E","~:optimize-constants"],null,["^4E","^18"],null,["^4E","~:external-config"],null,["^4E","~:tooling-config"],null,["^4E","~:emit-constants"],null,["^4E","~:load-tests"],null,["^4E","~:form-size-threshold"],null,["^4E","~:infer-externs"],true,["^4E","^1:"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^4E","~:fn-invoke-direct"],null,["^4E","~:source-map"],"/dev/null"]]]