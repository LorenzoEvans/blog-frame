["^ ","~:output",["^ ","~:js","goog.provide('rewrite_clj.node.quote');\ngoog.require('cljs.core');\ngoog.require('rewrite_clj.node.protocols');\n\n/**\n* @constructor\n * @implements {cljs.core.IRecord}\n * @implements {cljs.core.IKVReduce}\n * @implements {cljs.core.IEquiv}\n * @implements {cljs.core.IHash}\n * @implements {cljs.core.ICollection}\n * @implements {cljs.core.ICounted}\n * @implements {rewrite_clj.node.protocols.InnerNode}\n * @implements {cljs.core.ISeqable}\n * @implements {cljs.core.IMeta}\n * @implements {cljs.core.ICloneable}\n * @implements {cljs.core.IPrintWithWriter}\n * @implements {cljs.core.IIterable}\n * @implements {rewrite_clj.node.protocols.Node}\n * @implements {cljs.core.IWithMeta}\n * @implements {cljs.core.IAssociative}\n * @implements {cljs.core.IMap}\n * @implements {cljs.core.ILookup}\n*/\nrewrite_clj.node.quote.QuoteNode = (function (tag,prefix,sym,children,__meta,__extmap,__hash){\nthis.tag = tag;\nthis.prefix = prefix;\nthis.sym = sym;\nthis.children = children;\nthis.__meta = __meta;\nthis.__extmap = __extmap;\nthis.__hash = __hash;\nthis.cljs$lang$protocol_mask$partition0$ = 2230716170;\nthis.cljs$lang$protocol_mask$partition1$ = 139264;\n});\nrewrite_clj.node.quote.QuoteNode.prototype.toString = (function (){\nvar self__ = this;\nvar this$ = this;\nreturn this$.rewrite_clj$node$protocols$Node$string$arity$1(null);\n});\n\nrewrite_clj.node.quote.QuoteNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (this__4385__auto__,k__4386__auto__){\nvar self__ = this;\nvar this__4385__auto____$1 = this;\nreturn this__4385__auto____$1.cljs$core$ILookup$_lookup$arity$3(null,k__4386__auto__,null);\n});\n\nrewrite_clj.node.quote.QuoteNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (this__4387__auto__,k41726,else__4388__auto__){\nvar self__ = this;\nvar this__4387__auto____$1 = this;\nvar G__41734 = k41726;\nvar G__41734__$1 = (((G__41734 instanceof cljs.core.Keyword))?G__41734.fqn:null);\nswitch (G__41734__$1) {\ncase \"tag\":\nreturn self__.tag;\n\nbreak;\ncase \"prefix\":\nreturn self__.prefix;\n\nbreak;\ncase \"sym\":\nreturn self__.sym;\n\nbreak;\ncase \"children\":\nreturn self__.children;\n\nbreak;\ndefault:\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$3(self__.__extmap,k41726,else__4388__auto__);\n\n}\n});\n\nrewrite_clj.node.quote.QuoteNode.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (this__4404__auto__,f__4405__auto__,init__4406__auto__){\nvar self__ = this;\nvar this__4404__auto____$1 = this;\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (this__4404__auto____$1){\nreturn (function (ret__4407__auto__,p__41741){\nvar vec__41742 = p__41741;\nvar k__4408__auto__ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__41742,(0),null);\nvar v__4409__auto__ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__41742,(1),null);\nreturn (f__4405__auto__.cljs$core$IFn$_invoke$arity$3 ? f__4405__auto__.cljs$core$IFn$_invoke$arity$3(ret__4407__auto__,k__4408__auto__,v__4409__auto__) : f__4405__auto__.call(null,ret__4407__auto__,k__4408__auto__,v__4409__auto__));\n});})(this__4404__auto____$1))\n,init__4406__auto__,this__4404__auto____$1);\n});\n\nrewrite_clj.node.quote.QuoteNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (this__4399__auto__,writer__4400__auto__,opts__4401__auto__){\nvar self__ = this;\nvar this__4399__auto____$1 = this;\nvar pr_pair__4402__auto__ = ((function (this__4399__auto____$1){\nreturn (function (keyval__4403__auto__){\nreturn cljs.core.pr_sequential_writer(writer__4400__auto__,cljs.core.pr_writer,\"\",\" \",\"\",opts__4401__auto__,keyval__4403__auto__);\n});})(this__4399__auto____$1))\n;\nreturn cljs.core.pr_sequential_writer(writer__4400__auto__,pr_pair__4402__auto__,\"#rewrite-clj.node.quote.QuoteNode{\",\", \",\"}\",opts__4401__auto__,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),self__.tag],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"prefix\",\"prefix\",-265908465),self__.prefix],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305),self__.sym],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"children\",\"children\",-940561982),self__.children],null))], null),self__.__extmap));\n});\n\nrewrite_clj.node.quote.QuoteNode.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (G__41725){\nvar self__ = this;\nvar G__41725__$1 = this;\nreturn (new cljs.core.RecordIter((0),G__41725__$1,4,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Keyword(null,\"prefix\",\"prefix\",-265908465),new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305),new cljs.core.Keyword(null,\"children\",\"children\",-940561982)], null),(cljs.core.truth_(self__.__extmap)?cljs.core._iterator(self__.__extmap):cljs.core.nil_iter())));\n});\n\nrewrite_clj.node.quote.QuoteNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (this__4383__auto__){\nvar self__ = this;\nvar this__4383__auto____$1 = this;\nreturn self__.__meta;\n});\n\nrewrite_clj.node.quote.QuoteNode.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (this__4380__auto__){\nvar self__ = this;\nvar this__4380__auto____$1 = this;\nreturn (new rewrite_clj.node.quote.QuoteNode(self__.tag,self__.prefix,self__.sym,self__.children,self__.__meta,self__.__extmap,self__.__hash));\n});\n\nrewrite_clj.node.quote.QuoteNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (this__4389__auto__){\nvar self__ = this;\nvar this__4389__auto____$1 = this;\nreturn (4 + cljs.core.count(self__.__extmap));\n});\n\nrewrite_clj.node.quote.QuoteNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (this__4381__auto__){\nvar self__ = this;\nvar this__4381__auto____$1 = this;\nvar h__4243__auto__ = self__.__hash;\nif((!((h__4243__auto__ == null)))){\nreturn h__4243__auto__;\n} else {\nvar h__4243__auto____$1 = (function (){var fexpr__41746 = ((function (h__4243__auto__,this__4381__auto____$1){\nreturn (function (coll__4382__auto__){\nreturn (1712251858 ^ cljs.core.hash_unordered_coll(coll__4382__auto__));\n});})(h__4243__auto__,this__4381__auto____$1))\n;\nreturn fexpr__41746(this__4381__auto____$1);\n})();\nself__.__hash = h__4243__auto____$1;\n\nreturn h__4243__auto____$1;\n}\n});\n\nrewrite_clj.node.quote.QuoteNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this41727,other41728){\nvar self__ = this;\nvar this41727__$1 = this;\nreturn (((!((other41728 == null)))) && ((this41727__$1.constructor === other41728.constructor)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this41727__$1.tag,other41728.tag)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this41727__$1.prefix,other41728.prefix)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this41727__$1.sym,other41728.sym)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this41727__$1.children,other41728.children)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this41727__$1.__extmap,other41728.__extmap)));\n});\n\nrewrite_clj.node.quote.QuoteNode.prototype.rewrite_clj$node$protocols$Node$ = cljs.core.PROTOCOL_SENTINEL;\n\nrewrite_clj.node.quote.QuoteNode.prototype.rewrite_clj$node$protocols$Node$tag$arity$1 = (function (_){\nvar self__ = this;\nvar ___$1 = this;\nreturn self__.tag;\n});\n\nrewrite_clj.node.quote.QuoteNode.prototype.rewrite_clj$node$protocols$Node$printable_only_QMARK_$arity$1 = (function (_){\nvar self__ = this;\nvar ___$1 = this;\nreturn false;\n});\n\nrewrite_clj.node.quote.QuoteNode.prototype.rewrite_clj$node$protocols$Node$sexpr$arity$1 = (function (_){\nvar self__ = this;\nvar ___$1 = this;\nreturn (new cljs.core.List(null,self__.sym,(new cljs.core.List(null,cljs.core.first(rewrite_clj.node.protocols.sexprs(self__.children)),null,(1),null)),(2),null));\n});\n\nrewrite_clj.node.quote.QuoteNode.prototype.rewrite_clj$node$protocols$Node$length$arity$1 = (function (_){\nvar self__ = this;\nvar ___$1 = this;\nreturn (cljs.core.count(self__.prefix) + rewrite_clj.node.protocols.sum_lengths(self__.children));\n});\n\nrewrite_clj.node.quote.QuoteNode.prototype.rewrite_clj$node$protocols$Node$string$arity$1 = (function (_){\nvar self__ = this;\nvar ___$1 = this;\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.prefix),cljs.core.str.cljs$core$IFn$_invoke$arity$1(rewrite_clj.node.protocols.concat_strings(self__.children))].join('');\n});\n\nrewrite_clj.node.quote.QuoteNode.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (this__4394__auto__,k__4395__auto__){\nvar self__ = this;\nvar this__4394__auto____$1 = this;\nif(cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"children\",\"children\",-940561982),null,new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305),null,new cljs.core.Keyword(null,\"prefix\",\"prefix\",-265908465),null,new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),null], null), null),k__4395__auto__)){\nreturn cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(cljs.core._with_meta(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,this__4394__auto____$1),self__.__meta),k__4395__auto__);\n} else {\nreturn (new rewrite_clj.node.quote.QuoteNode(self__.tag,self__.prefix,self__.sym,self__.children,self__.__meta,cljs.core.not_empty(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.__extmap,k__4395__auto__)),null));\n}\n});\n\nrewrite_clj.node.quote.QuoteNode.prototype.rewrite_clj$node$protocols$InnerNode$ = cljs.core.PROTOCOL_SENTINEL;\n\nrewrite_clj.node.quote.QuoteNode.prototype.rewrite_clj$node$protocols$InnerNode$inner_QMARK_$arity$1 = (function (_){\nvar self__ = this;\nvar ___$1 = this;\nreturn true;\n});\n\nrewrite_clj.node.quote.QuoteNode.prototype.rewrite_clj$node$protocols$InnerNode$children$arity$1 = (function (_){\nvar self__ = this;\nvar ___$1 = this;\nreturn self__.children;\n});\n\nrewrite_clj.node.quote.QuoteNode.prototype.rewrite_clj$node$protocols$InnerNode$replace_children$arity$2 = (function (this$,children_SINGLEQUOTE_){\nvar self__ = this;\nvar this$__$1 = this;\nrewrite_clj.node.protocols.assert_single_sexpr(children_SINGLEQUOTE_);\n\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(this$__$1,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),children_SINGLEQUOTE_);\n});\n\nrewrite_clj.node.quote.QuoteNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (this__4392__auto__,k__4393__auto__,G__41725){\nvar self__ = this;\nvar this__4392__auto____$1 = this;\nvar pred__41759 = cljs.core.keyword_identical_QMARK_;\nvar expr__41760 = k__4393__auto__;\nif(cljs.core.truth_((function (){var G__41762 = new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223);\nvar G__41763 = expr__41760;\nreturn (pred__41759.cljs$core$IFn$_invoke$arity$2 ? pred__41759.cljs$core$IFn$_invoke$arity$2(G__41762,G__41763) : pred__41759.call(null,G__41762,G__41763));\n})())){\nreturn (new rewrite_clj.node.quote.QuoteNode(G__41725,self__.prefix,self__.sym,self__.children,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((function (){var G__41764 = new cljs.core.Keyword(null,\"prefix\",\"prefix\",-265908465);\nvar G__41765 = expr__41760;\nreturn (pred__41759.cljs$core$IFn$_invoke$arity$2 ? pred__41759.cljs$core$IFn$_invoke$arity$2(G__41764,G__41765) : pred__41759.call(null,G__41764,G__41765));\n})())){\nreturn (new rewrite_clj.node.quote.QuoteNode(self__.tag,G__41725,self__.sym,self__.children,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((function (){var G__41766 = new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305);\nvar G__41767 = expr__41760;\nreturn (pred__41759.cljs$core$IFn$_invoke$arity$2 ? pred__41759.cljs$core$IFn$_invoke$arity$2(G__41766,G__41767) : pred__41759.call(null,G__41766,G__41767));\n})())){\nreturn (new rewrite_clj.node.quote.QuoteNode(self__.tag,self__.prefix,G__41725,self__.children,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((function (){var G__41768 = new cljs.core.Keyword(null,\"children\",\"children\",-940561982);\nvar G__41769 = expr__41760;\nreturn (pred__41759.cljs$core$IFn$_invoke$arity$2 ? pred__41759.cljs$core$IFn$_invoke$arity$2(G__41768,G__41769) : pred__41759.call(null,G__41768,G__41769));\n})())){\nreturn (new rewrite_clj.node.quote.QuoteNode(self__.tag,self__.prefix,self__.sym,G__41725,self__.__meta,self__.__extmap,null));\n} else {\nreturn (new rewrite_clj.node.quote.QuoteNode(self__.tag,self__.prefix,self__.sym,self__.children,self__.__meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.__extmap,k__4393__auto__,G__41725),null));\n}\n}\n}\n}\n});\n\nrewrite_clj.node.quote.QuoteNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this__4397__auto__){\nvar self__ = this;\nvar this__4397__auto____$1 = this;\nreturn cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),self__.tag,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"prefix\",\"prefix\",-265908465),self__.prefix,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305),self__.sym,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"children\",\"children\",-940561982),self__.children,null))], null),self__.__extmap));\n});\n\nrewrite_clj.node.quote.QuoteNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this__4384__auto__,G__41725){\nvar self__ = this;\nvar this__4384__auto____$1 = this;\nreturn (new rewrite_clj.node.quote.QuoteNode(self__.tag,self__.prefix,self__.sym,self__.children,G__41725,self__.__extmap,self__.__hash));\n});\n\nrewrite_clj.node.quote.QuoteNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this__4390__auto__,entry__4391__auto__){\nvar self__ = this;\nvar this__4390__auto____$1 = this;\nif(cljs.core.vector_QMARK_(entry__4391__auto__)){\nreturn this__4390__auto____$1.cljs$core$IAssociative$_assoc$arity$3(null,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry__4391__auto__,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry__4391__auto__,(1)));\n} else {\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,this__4390__auto____$1,entry__4391__auto__);\n}\n});\n\nrewrite_clj.node.quote.QuoteNode.getBasis = (function (){\nreturn new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"tag\",\"tag\",350170304,null),new cljs.core.Symbol(null,\"prefix\",\"prefix\",1374623062,null),new cljs.core.Symbol(null,\"sym\",\"sym\",195671222,null),new cljs.core.Symbol(null,\"children\",\"children\",699969545,null)], null);\n});\n\nrewrite_clj.node.quote.QuoteNode.cljs$lang$type = true;\n\nrewrite_clj.node.quote.QuoteNode.cljs$lang$ctorPrSeq = (function (this__4428__auto__){\nreturn (new cljs.core.List(null,\"rewrite-clj.node.quote/QuoteNode\",null,(1),null));\n});\n\nrewrite_clj.node.quote.QuoteNode.cljs$lang$ctorPrWriter = (function (this__4428__auto__,writer__4429__auto__){\nreturn cljs.core._write(writer__4429__auto__,\"rewrite-clj.node.quote/QuoteNode\");\n});\n\n/**\n * Positional factory function for rewrite-clj.node.quote/QuoteNode.\n */\nrewrite_clj.node.quote.__GT_QuoteNode = (function rewrite_clj$node$quote$__GT_QuoteNode(tag,prefix,sym,children){\nreturn (new rewrite_clj.node.quote.QuoteNode(tag,prefix,sym,children,null,null,null));\n});\n\n/**\n * Factory function for rewrite-clj.node.quote/QuoteNode, taking a map of keywords to field values.\n */\nrewrite_clj.node.quote.map__GT_QuoteNode = (function rewrite_clj$node$quote$map__GT_QuoteNode(G__41729){\nvar extmap__4424__auto__ = (function (){var G__41773 = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(G__41729,new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"prefix\",\"prefix\",-265908465),new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305),new cljs.core.Keyword(null,\"children\",\"children\",-940561982)], 0));\nif(cljs.core.record_QMARK_(G__41729)){\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,G__41773);\n} else {\nreturn G__41773;\n}\n})();\nreturn (new rewrite_clj.node.quote.QuoteNode(new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223).cljs$core$IFn$_invoke$arity$1(G__41729),new cljs.core.Keyword(null,\"prefix\",\"prefix\",-265908465).cljs$core$IFn$_invoke$arity$1(G__41729),new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305).cljs$core$IFn$_invoke$arity$1(G__41729),new cljs.core.Keyword(null,\"children\",\"children\",-940561982).cljs$core$IFn$_invoke$arity$1(G__41729),null,cljs.core.not_empty(extmap__4424__auto__),null));\n});\n\nrewrite_clj.node.quote.__GT_node = (function rewrite_clj$node$quote$__GT_node(t,prefix,sym,children){\nrewrite_clj.node.protocols.assert_single_sexpr(children);\n\nreturn rewrite_clj.node.quote.__GT_QuoteNode(t,prefix,sym,children);\n});\n/**\n * Create node representing a quoted form.\n * Takes either a seq of nodes or a single one.\n */\nrewrite_clj.node.quote.quote_node = (function rewrite_clj$node$quote$quote_node(children){\nwhile(true){\nif(cljs.core.sequential_QMARK_(children)){\nreturn rewrite_clj.node.quote.__GT_node(new cljs.core.Keyword(null,\"quote\",\"quote\",-262615245),\"'\",new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),children);\n} else {\nvar G__41800 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [children], null);\nchildren = G__41800;\ncontinue;\n}\nbreak;\n}\n});\n/**\n * Create node representing a syntax-quoted form.\n * Takes either a seq of nodes or a single one.\n */\nrewrite_clj.node.quote.syntax_quote_node = (function rewrite_clj$node$quote$syntax_quote_node(children){\nwhile(true){\nif(cljs.core.sequential_QMARK_(children)){\nreturn rewrite_clj.node.quote.__GT_node(new cljs.core.Keyword(null,\"syntax-quote\",\"syntax-quote\",-1233164847),\"`\",new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),children);\n} else {\nvar G__41801 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [children], null);\nchildren = G__41801;\ncontinue;\n}\nbreak;\n}\n});\n/**\n * Create node representing an unquoted form. (`~...`)\n * Takes either a seq of nodes or a single one.\n */\nrewrite_clj.node.quote.unquote_node = (function rewrite_clj$node$quote$unquote_node(children){\nwhile(true){\nif(cljs.core.sequential_QMARK_(children)){\nreturn rewrite_clj.node.quote.__GT_node(new cljs.core.Keyword(null,\"unquote\",\"unquote\",1649741032),\"~\",new cljs.core.Symbol(null,\"unquote\",\"unquote\",-1004694737,null),children);\n} else {\nvar G__41803 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [children], null);\nchildren = G__41803;\ncontinue;\n}\nbreak;\n}\n});\n/**\n * Create node representing an unquote-spliced form. (`~@...`)\n * Takes either a seq of nodes or a single one.\n */\nrewrite_clj.node.quote.unquote_splicing_node = (function rewrite_clj$node$quote$unquote_splicing_node(children){\nwhile(true){\nif(cljs.core.sequential_QMARK_(children)){\nreturn rewrite_clj.node.quote.__GT_node(new cljs.core.Keyword(null,\"unquote-splicing\",\"unquote-splicing\",1295267556),\"~@\",new cljs.core.Symbol(null,\"unquote-splicing\",\"unquote-splicing\",-1359168213,null),children);\n} else {\nvar G__41804 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [children], null);\nchildren = G__41804;\ncontinue;\n}\nbreak;\n}\n});\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","rewrite_clj/node/quote.cljs","~:line",1,"~:column",14,"~:end-line",1,"~:end-column",36,"~:no-doc",true],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$react","~$module$node_modules$react$index","~$create-react-class","~$module$node_modules$create_react_class$index","~$react-dom","~$module$node_modules$react_dom$index","~$clojure.spec.alpha","~$cljs.spec.alpha"],"~:use-macros",null,"~:excludes",["~#set",[]],"~:name","~$rewrite-clj.node.quote","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$rewrite-clj.node.protocols","^P","~$node","^P","~$cljs.core","^R","~$goog","^S"],"~:seen",["^I",["~:require"]],"~:uses",null,"~:require-macros",["^ ","^R","^R"],"~:form",["~#list",["~$ns","^K",["^Y",["^U",["^P","~:as","^Q"]]]]],"~:flags",["^ ","^U",["^I",[]]],"~:js-deps",["^ "],"~:deps",["^S","^R","^P"]],"^M","^K","~:resource-id",["~:shadow.build.classpath/resource","rewrite_clj/node/quote.cljs"],"~:compiled-at",1573425046791,"~:resource-name","rewrite_clj/node/quote.cljs","~:warnings",[],"~:source","(ns ^:no-doc rewrite-clj.node.quote\n  (:require [rewrite-clj.node.protocols :as node]))\n\n;; ## Node\n\n(defrecord QuoteNode [tag prefix sym children]\n  node/Node\n  (tag [_] tag)\n  (printable-only? [_] false)\n  (sexpr [_]\n    (list sym (first (node/sexprs children))))\n  (length [_]\n    (+ (count prefix) (node/sum-lengths children)))\n  (string [_]\n    (str prefix (node/concat-strings children)))\n\n  node/InnerNode\n  (inner? [_] true)\n  (children [_] children)\n  (replace-children [this children']\n    (node/assert-single-sexpr children')\n    (assoc this :children children'))\n\n  Object\n  (toString [this]\n    (node/string this)))\n\n;(node/make-printable! QuoteNode)\n\n;; ## Constructors\n\n(defn- ->node\n  [t prefix sym children]\n  (node/assert-single-sexpr children)\n  (->QuoteNode t prefix sym children))\n\n(defn quote-node\n  \"Create node representing a quoted form.\n   Takes either a seq of nodes or a single one.\"\n  [children]\n  (if (sequential? children)\n    (->node\n      :quote \"'\" 'quote\n      children)\n    (recur [children])))\n\n(defn syntax-quote-node\n  \"Create node representing a syntax-quoted form.\n   Takes either a seq of nodes or a single one.\"\n  [children]\n  (if (sequential? children)\n    (->node\n      :syntax-quote \"`\" 'quote\n      children)\n    (recur [children])))\n\n(defn unquote-node\n  \"Create node representing an unquoted form. (`~...`)\n   Takes either a seq of nodes or a single one.\"\n  [children]\n  (if (sequential? children)\n    (->node\n      :unquote \"~\" 'unquote\n      children)\n    (recur [children])))\n\n(defn unquote-splicing-node\n  \"Create node representing an unquote-spliced form. (`~@...`)\n   Takes either a seq of nodes or a single one.\"\n  [children]\n  (if (sequential? children)\n    (->node\n      :unquote-splicing \"~@\" 'unquote-splicing\n      children)\n    (recur [children])))\n","~:reader-features",["^I",["~:cljs"]],"~:cljc",false,"~:source-map-compact",["^ ","mappings","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","names",["this__4385__auto__","k__4386__auto__","this__4387__auto__","k41726","else__4388__auto__","G__41734","cljs.core/Keyword","tag","prefix","sym","children","cljs.core.get.cljs$core$IFn$_invoke$arity$3","__extmap","this__4404__auto__","f__4405__auto__","init__4406__auto__","cljs.core.reduce.cljs$core$IFn$_invoke$arity$3","ret__4407__auto__","p__41741","vec__41742","k__4408__auto__","cljs.core.nth.cljs$core$IFn$_invoke$arity$3","v__4409__auto__","this__4399__auto__","writer__4400__auto__","opts__4401__auto__","pr-pair__4402__auto__","keyval__4403__auto__","cljs.core/pr-sequential-writer","cljs.core.concat.cljs$core$IFn$_invoke$arity$2","cljs.core/PersistentVector","G__41725","cljs.core/RecordIter","cljs.core/-iterator","cljs.core/nil-iter","this__4383__auto__","__meta","this__4380__auto__","__hash","this__4389__auto__","cljs.core/count","this__4381__auto__","h__4243__auto__","fexpr__41746","coll__4382__auto__","cljs.core/hash-unordered-coll","this41727","other41728","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2","cljs.core/PROTOCOL_SENTINEL","this__4394__auto__","k__4395__auto__","cljs.core/contains?","cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2","cljs.core/-with-meta","cljs.core.into.cljs$core$IFn$_invoke$arity$2","cljs.core/not-empty","this__4392__auto__","k__4393__auto__","pred__41759","cljs.core/keyword-identical?","expr__41760","G__41762","G__41763","G__41764","G__41765","G__41766","G__41767","G__41768","G__41769","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3","this__4397__auto__","cljs.core/seq","cljs.core/MapEntry","this__4384__auto__","this__4390__auto__","entry__4391__auto__","cljs.core/vector?","cljs.core._nth.cljs$core$IFn$_invoke$arity$2","cljs.core/-conj","rewrite-clj.node.quote/QuoteNode","this__4428__auto__","cljs.core/List","writer__4429__auto__","cljs.core/-write","G__41729","extmap__4424__auto__","G__41773","cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic","cljs.core/record?","rewrite-clj.node.quote/->QuoteNode","rewrite-clj.node.quote/map->QuoteNode","_","cljs.core/first","rewrite-clj.node.protocols/sexprs","rewrite-clj.node.protocols/sum-lengths","rewrite-clj.node.protocols/concat-strings","this","children'","rewrite-clj.node.protocols/assert-single-sexpr","rewrite-clj.node.quote/->node","t","rewrite-clj.node.quote/quote-node","cljs.core/sequential?","rewrite-clj.node.quote/syntax-quote-node","rewrite-clj.node.quote/unquote-node","rewrite-clj.node.quote/unquote-splicing-node"]]],"~:cache-keys",["~#cmap",[["^14","goog/math/math.js"],[1559507890775,"~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^I",[]],"~:deps-syms",["^S","~$goog.array","~$goog.asserts"]]],["^14","goog/array/array.js"],[1559507890775,"^1A",["^ ","^1B",null,"^1C",["^I",[]],"^1D",["^S","^1F"]]],["^14","goog/debug/error.js"],[1559507890775,"^1A",["^ ","^1B",null,"^1C",["^I",[]],"^1D",["^S"]]],["^14","goog/dom/nodetype.js"],[1559507890775,"^1A",["^ ","^1B",null,"^1C",["^I",[]],"^1D",["^S"]]],["^14","goog/object/object.js"],[1559507890775,"^1A",["^ ","^1B",null,"^1C",["^I",[]],"^1D",["^S"]]],"~:SHADOW-TIMESTAMP",[1570928878000,1556316222000],["^14","goog/math/long.js"],[1559507890775,"^1A",["^ ","^1B",null,"^1C",["^I",[]],"^1D",["^S","^1F","~$goog.reflect"]]],["^14","goog/string/internal.js"],[1559507890775,"^1A",["^ ","^1B",null,"^1C",["^I",[]],"^1D",["^S"]]],["^14","goog/functions/functions.js"],[1559507890775,"^1A",["^ ","^1B",null,"^1C",["^I",[]],"^1D",["^S"]]],["^14","goog/structs/map.js"],[1559507890775,"^1A",["^ ","^1B",null,"^1C",["^I",[]],"^1D",["^S","~$goog.iter.Iterator","~$goog.iter.StopIteration"]]],["^14","goog/asserts/asserts.js"],[1559507890775,"^1A",["^ ","^1B",null,"^1C",["^I",[]],"^1D",["^S","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^14","goog/uri/uri.js"],[1559507890775,"^1A",["^ ","^1B",null,"^1C",["^I",[]],"^1D",["^S","^1E","^1F","~$goog.string","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^14","rewrite_clj/node/protocols.cljs"],[1568862518445,"^1A",["^ ","^1B",null,"^1C",["^I",[]],"^1D",["^S","^R","~$clojure.string"]]],["^14","goog/base.js"],[1559507890775,"^1A",["^ ","^1B",null,"^1C",["^I",[]],"^1D",[]]],["^14","goog/structs/structs.js"],[1559507890775,"^1A",["^ ","^1B",null,"^1C",["^I",[]],"^1D",["^S","^1E","~$goog.object"]]],["^14","clojure/string.cljs"],[1556316222100,"^1A",["^ ","^1B",null,"^1C",["^I",[]],"^1D",["^S","^R","^1M","~$goog.string.StringBuffer"]]],["^14","goog/string/string.js"],[1559507890775,"^1A",["^ ","^1B",null,"^1C",["^I",[]],"^1D",["^S","~$goog.string.internal"]]],["^14","goog/reflect/reflect.js"],[1559507890775,"^1A",["^ ","^1B",null,"^1C",["^I",[]],"^1D",["^S"]]],["^14","goog/string/stringbuffer.js"],[1559507890775,"^1A",["^ ","^1B",null,"^1C",["^I",[]],"^1D",["^S"]]],["^14","goog/iter/iter.js"],[1559507890775,"^1A",["^ ","^1B",null,"^1C",["^I",[]],"^1D",["^S","^1E","^1F","~$goog.functions","~$goog.math"]]],["^14","rewrite_clj/node/quote.cljs"],[1568862518445,"^1A",["^ ","^1B",null,"^1C",["^I",[]],"^1D",["^S","^R","^P"]]],["^14","cljs/core.cljs"],[1556316222100,"^1A",["^ ","^1B",null,"^1C",["^I",[]],"^1D",["~$goog.math.Long","~$goog.math.Integer","^1M","^1T","^1E","~$goog.Uri","^1U"]]],["^14","goog/math/integer.js"],[1559507890775,"^1A",["^ ","^1B",null,"^1C",["^I",[]],"^1D",["^S"]]],["^14","goog/uri/utils.js"],[1559507890775,"^1A",["^ ","^1B",null,"^1C",["^I",[]],"^1D",["^S","^1E","^1F","^1M"]]]]],"~:clj-info",["^ ","jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/tools.reader/1.3.0/tools.reader-1.3.0.jar!/clojure/tools/reader/default_data_readers.clj",1556316222000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/edn.clj",1559876774000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/externs.clj",1556316222000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/core.cljc",1556316222000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/string.clj",1559876774000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/pprint.clj",1559876774000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/env.cljc",1556316222000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/tools.reader/1.3.0/tools.reader-1.3.0.jar!/clojure/tools/reader/impl/inspect.clj",1556316222000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/tools.reader/1.3.0/tools.reader-1.3.0.jar!/clojure/tools/reader/reader_types.clj",1556316222000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/source_map/base64_vlq.clj",1556316222000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/source_map.clj",1556316222000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/java/io.clj",1559876774000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/tools.reader/1.3.0/tools.reader-1.3.0.jar!/clojure/tools/reader.clj",1556316222000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/js_deps.cljc",1556316222000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/set.clj",1559876774000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/tools.reader/1.3.0/tools.reader-1.3.0.jar!/clojure/tools/reader/impl/errors.clj",1556316222000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/compiler.cljc",1556316222000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/util.cljc",1556316222000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/source_map/base64.clj",1556316222000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/tagged_literals.cljc",1556316222000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/instant.clj",1559876774000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/core.clj",1559876774000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/data.json/0.2.6/data.json-0.2.6.jar!/clojure/data/json.clj",1556312825000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/analyzer.cljc",1556316222000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","rewrite_clj/node/quote.cljs","^7",1,"^8",14,"^9",1,"^:",36,"^;",true],"^<",["^ ","^=","^>","^?","^@","^A","^B","^C","^D","^E","^F"],"^G",null,"^H",["^I",[]],"^J","^K","^N",null,"^O",["^ ","^P","^P","^Q","^P","^R","^R","^S","^S"],"^T",["^I",["^U"]],"^V",null,"~:defs",["^ ","~$QuoteNode",["^ ","~:num-fields",4,"~:protocols",["^I",["~$cljs.core/IRecord","~$cljs.core/IKVReduce","~$cljs.core/IEquiv","~$cljs.core/IHash","~$cljs.core/ICollection","~$cljs.core/Object","~$cljs.core/ICounted","~$rewrite-clj.node.protocols/InnerNode","~$cljs.core/ISeqable","~$cljs.core/IMeta","~$cljs.core/ICloneable","~$cljs.core/IPrintWithWriter","~$cljs.core/IIterable","~$rewrite-clj.node.protocols/Node","~$cljs.core/IWithMeta","~$cljs.core/IAssociative","~$cljs.core/IMap","~$cljs.core/ILookup"]],"^J","~$rewrite-clj.node.quote/QuoteNode","^6","rewrite_clj/node/quote.cljs","^:",21,"~:type",true,"^8",12,"~:internal-ctor",true,"^7",6,"~:record",true,"^9",6,"~:tag","~$function","~:skip-protocol-flag",["^I",["^2N","^2O","^2P","^2Q","^2R","^2T","^2V","^2W","^2X","^2Y","^2Z","^30","^31","^32","^33"]]],"~$->QuoteNode",["^ ","~:protocol-inline",null,"^5",["^ ","^6","rewrite_clj/node/quote.cljs","^:",21,"^8",12,"^36",true,"~:factory","~:positional","^7",6,"^9",6,"~:arglists",["^Y",["~$quote",["^Y",[["~$tag","~$prefix","~$sym","~$children"]]]]],"~:doc","Positional factory function for rewrite-clj.node.quote/QuoteNode."],"^J","~$rewrite-clj.node.quote/->QuoteNode","^6","rewrite_clj/node/quote.cljs","^:",21,"~:method-params",["^Y",[["^3A","^3B","^3C","^3D"]]],"~:protocol-impl",null,"~:arglists-meta",["^Y",[null,null]],"^8",1,"^36",true,"~:variadic?",false,"^3=","^3>","^7",6,"~:ret-tag","^34","^9",6,"~:max-fixed-arity",4,"~:fn-var",true,"^3?",["^Y",["^3@",["^Y",[["^3A","^3B","^3C","^3D"]]]]],"^3E","Positional factory function for rewrite-clj.node.quote/QuoteNode."],"~$map->QuoteNode",["^ ","^3<",null,"^5",["^ ","^6","rewrite_clj/node/quote.cljs","^:",21,"^8",12,"^36",true,"^3=","~:map","^7",6,"^9",6,"^3?",["^Y",["^3@",["^Y",[["~$G__41729"]]]]],"^3E","Factory function for rewrite-clj.node.quote/QuoteNode, taking a map of keywords to field values."],"^J","~$rewrite-clj.node.quote/map->QuoteNode","^6","rewrite_clj/node/quote.cljs","^:",21,"^3G",["^Y",[["^3P"]]],"^3H",null,"^3I",["^Y",[null,null]],"^8",1,"^36",true,"^3J",false,"^3=","^3O","^7",6,"^3K","^34","^9",6,"^3L",1,"^3M",true,"^3?",["^Y",["^3@",["^Y",[["^3P"]]]]],"^3E","Factory function for rewrite-clj.node.quote/QuoteNode, taking a map of keywords to field values."],"~$->node",["^ ","^3<",null,"^5",["^ ","^6","rewrite_clj/node/quote.cljs","^7",32,"^8",8,"^9",32,"^:",14,"~:private",true,"^3?",["^Y",["^3@",["^Y",[["~$t","^3B","^3C","^3D"]]]]]],"^3S",true,"^J","~$rewrite-clj.node.quote/->node","^6","rewrite_clj/node/quote.cljs","^:",14,"^3G",["^Y",[["~$t","^3B","^3C","^3D"]]],"^3H",null,"^3I",["^Y",[null,null]],"^8",1,"^3J",false,"^7",32,"^3K","^34","^9",32,"^3L",4,"^3M",true,"^3?",["^Y",["^3@",["^Y",[["~$t","^3B","^3C","^3D"]]]]]],"~$quote-node",["^ ","^3<",null,"^5",["^ ","^6","rewrite_clj/node/quote.cljs","^7",37,"^8",7,"^9",37,"^:",17,"^3?",["^Y",["^3@",["^Y",[["^3D"]]]]],"^3E","Create node representing a quoted form.\n   Takes either a seq of nodes or a single one."],"^J","~$rewrite-clj.node.quote/quote-node","^6","rewrite_clj/node/quote.cljs","^:",17,"^3G",["^Y",[["^3D"]]],"^3H",null,"^3I",["^Y",[null,null]],"^8",1,"^3J",false,"^7",37,"^3K","^34","^9",37,"^3L",1,"^3M",true,"^3?",["^Y",["^3@",["^Y",[["^3D"]]]]],"^3E","Create node representing a quoted form.\n   Takes either a seq of nodes or a single one."],"~$syntax-quote-node",["^ ","^3<",null,"^5",["^ ","^6","rewrite_clj/node/quote.cljs","^7",47,"^8",7,"^9",47,"^:",24,"^3?",["^Y",["^3@",["^Y",[["^3D"]]]]],"^3E","Create node representing a syntax-quoted form.\n   Takes either a seq of nodes or a single one."],"^J","~$rewrite-clj.node.quote/syntax-quote-node","^6","rewrite_clj/node/quote.cljs","^:",24,"^3G",["^Y",[["^3D"]]],"^3H",null,"^3I",["^Y",[null,null]],"^8",1,"^3J",false,"^7",47,"^3K","^34","^9",47,"^3L",1,"^3M",true,"^3?",["^Y",["^3@",["^Y",[["^3D"]]]]],"^3E","Create node representing a syntax-quoted form.\n   Takes either a seq of nodes or a single one."],"~$unquote-node",["^ ","^3<",null,"^5",["^ ","^6","rewrite_clj/node/quote.cljs","^7",57,"^8",7,"^9",57,"^:",19,"^3?",["^Y",["^3@",["^Y",[["^3D"]]]]],"^3E","Create node representing an unquoted form. (`~...`)\n   Takes either a seq of nodes or a single one."],"^J","~$rewrite-clj.node.quote/unquote-node","^6","rewrite_clj/node/quote.cljs","^:",19,"^3G",["^Y",[["^3D"]]],"^3H",null,"^3I",["^Y",[null,null]],"^8",1,"^3J",false,"^7",57,"^3K","^34","^9",57,"^3L",1,"^3M",true,"^3?",["^Y",["^3@",["^Y",[["^3D"]]]]],"^3E","Create node representing an unquoted form. (`~...`)\n   Takes either a seq of nodes or a single one."],"~$unquote-splicing-node",["^ ","^3<",null,"^5",["^ ","^6","rewrite_clj/node/quote.cljs","^7",67,"^8",7,"^9",67,"^:",28,"^3?",["^Y",["^3@",["^Y",[["^3D"]]]]],"^3E","Create node representing an unquote-spliced form. (`~@...`)\n   Takes either a seq of nodes or a single one."],"^J","~$rewrite-clj.node.quote/unquote-splicing-node","^6","rewrite_clj/node/quote.cljs","^:",28,"^3G",["^Y",[["^3D"]]],"^3H",null,"^3I",["^Y",[null,null]],"^8",1,"^3J",false,"^7",67,"^3K","^34","^9",67,"^3L",1,"^3M",true,"^3?",["^Y",["^3@",["^Y",[["^3D"]]]]],"^3E","Create node representing an unquote-spliced form. (`~@...`)\n   Takes either a seq of nodes or a single one."]],"^W",["^ ","^R","^R"],"~:cljs.analyzer/constants",["^ ","^T",["^I",["^3A","~:children","~:unquote-splicing","~:unquote","^3D","~$unquote-splicing","~:sym","~:prefix","~$unquote","~:syntax-quote","~:quote","^3C","^3B","^38","^3@"]],"~:order",["^38","^47","^46","^42","^3A","^3B","^3C","^3D","^4:","^3@","^49","^44","^48","^43","^45"]],"^10",["^ ","^U",["^I",[]]],"^11",["^ "],"^12",["^S","^R","^P"]],"^M","^K","~:ns-specs",["^ "],"~:ns-spec-vars",[],"~:compiler-options",["^1@",[["^4>","~:static-fns"],true,["^4>","~:elide-asserts"],false,["^4>","~:optimize-constants"],null,["^4>","^17"],null,["^4>","~:external-config"],null,["^4>","~:tooling-config"],null,["^4>","~:emit-constants"],null,["^4>","~:load-tests"],null,["^4>","~:form-size-threshold"],null,["^4>","~:infer-externs"],true,["^4>","^19"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^4>","~:fn-invoke-direct"],null,["^4>","~:source-map"],"/dev/null"]]]